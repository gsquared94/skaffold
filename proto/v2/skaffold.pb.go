// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v2/skaffold.proto

package v2

import (
	context "context"
	fmt "fmt"
	enums "github.com/GoogleContainerTools/skaffold/proto/enums"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// BuilderType from public import enums/enums.proto
type BuilderType = enums.BuilderType

var BuilderType_name = enums.BuilderType_name
var BuilderType_value = enums.BuilderType_value

const BuilderType_UNKNOWN_BUILDER_TYPE = BuilderType(enums.BuilderType_UNKNOWN_BUILDER_TYPE)
const BuilderType_JIB = BuilderType(enums.BuilderType_JIB)
const BuilderType_BAZEL = BuilderType(enums.BuilderType_BAZEL)
const BuilderType_BUILDPACKS = BuilderType(enums.BuilderType_BUILDPACKS)
const BuilderType_CUSTOM = BuilderType(enums.BuilderType_CUSTOM)
const BuilderType_KANIKO = BuilderType(enums.BuilderType_KANIKO)
const BuilderType_DOCKER = BuilderType(enums.BuilderType_DOCKER)

// BuildType from public import enums/enums.proto
type BuildType = enums.BuildType

var BuildType_name = enums.BuildType_name
var BuildType_value = enums.BuildType_value

const BuildType_UNKNOWN_BUILD_TYPE = BuildType(enums.BuildType_UNKNOWN_BUILD_TYPE)
const BuildType_CLUSTER = BuildType(enums.BuildType_CLUSTER)
const BuildType_GCB = BuildType(enums.BuildType_GCB)
const BuildType_LOCAL = BuildType(enums.BuildType_LOCAL)

// TesterType from public import enums/enums.proto
type TesterType = enums.TesterType

var TesterType_name = enums.TesterType_name
var TesterType_value = enums.TesterType_value

const TesterType_UNKNOWN_TEST_TYPE = TesterType(enums.TesterType_UNKNOWN_TEST_TYPE)
const TesterType_UNIT = TesterType(enums.TesterType_UNIT)
const TesterType_CONTAINER_STRUCTURE_TEST = TesterType(enums.TesterType_CONTAINER_STRUCTURE_TEST)

// DeployerType from public import enums/enums.proto
type DeployerType = enums.DeployerType

var DeployerType_name = enums.DeployerType_name
var DeployerType_value = enums.DeployerType_value

const DeployerType_UNKNOWN_DEPLOYER_TYPE = DeployerType(enums.DeployerType_UNKNOWN_DEPLOYER_TYPE)
const DeployerType_HELM = DeployerType(enums.DeployerType_HELM)
const DeployerType_KUSTOMIZE = DeployerType(enums.DeployerType_KUSTOMIZE)
const DeployerType_KUBECTL = DeployerType(enums.DeployerType_KUBECTL)

// ClusterType from public import enums/enums.proto
type ClusterType = enums.ClusterType

var ClusterType_name = enums.ClusterType_name
var ClusterType_value = enums.ClusterType_value

const ClusterType_UNKNOWN_CLUSTER_TYPE = ClusterType(enums.ClusterType_UNKNOWN_CLUSTER_TYPE)
const ClusterType_MINIKUBE = ClusterType(enums.ClusterType_MINIKUBE)
const ClusterType_GKE = ClusterType(enums.ClusterType_GKE)
const ClusterType_OTHER = ClusterType(enums.ClusterType_OTHER)

// LogLevel from public import enums/enums.proto
type LogLevel = enums.LogLevel

var LogLevel_name = enums.LogLevel_name
var LogLevel_value = enums.LogLevel_value

const LogLevel_DEBUG = LogLevel(enums.LogLevel_DEBUG)
const LogLevel_INFO = LogLevel(enums.LogLevel_INFO)
const LogLevel_WARN = LogLevel(enums.LogLevel_WARN)
const LogLevel_ERROR = LogLevel(enums.LogLevel_ERROR)
const LogLevel_FATAL = LogLevel(enums.LogLevel_FATAL)
const LogLevel_PANIC = LogLevel(enums.LogLevel_PANIC)

// StatusCode from public import enums/enums.proto
type StatusCode = enums.StatusCode

var StatusCode_name = enums.StatusCode_name
var StatusCode_value = enums.StatusCode_value

const StatusCode_OK = StatusCode(enums.StatusCode_OK)
const StatusCode_STATUSCHECK_SUCCESS = StatusCode(enums.StatusCode_STATUSCHECK_SUCCESS)
const StatusCode_BUILD_SUCCESS = StatusCode(enums.StatusCode_BUILD_SUCCESS)
const StatusCode_DEPLOY_SUCCESS = StatusCode(enums.StatusCode_DEPLOY_SUCCESS)
const StatusCode_TEST_SUCCESS = StatusCode(enums.StatusCode_TEST_SUCCESS)
const StatusCode_BUILD_PUSH_ACCESS_DENIED = StatusCode(enums.StatusCode_BUILD_PUSH_ACCESS_DENIED)
const StatusCode_BUILD_PROJECT_NOT_FOUND = StatusCode(enums.StatusCode_BUILD_PROJECT_NOT_FOUND)
const StatusCode_BUILD_DOCKER_DAEMON_NOT_RUNNING = StatusCode(enums.StatusCode_BUILD_DOCKER_DAEMON_NOT_RUNNING)
const StatusCode_BUILD_USER_ERROR = StatusCode(enums.StatusCode_BUILD_USER_ERROR)
const StatusCode_BUILD_DOCKER_UNAVAILABLE = StatusCode(enums.StatusCode_BUILD_DOCKER_UNAVAILABLE)
const StatusCode_BUILD_DOCKER_UNAUTHORIZED = StatusCode(enums.StatusCode_BUILD_DOCKER_UNAUTHORIZED)
const StatusCode_BUILD_DOCKER_SYSTEM_ERR = StatusCode(enums.StatusCode_BUILD_DOCKER_SYSTEM_ERR)
const StatusCode_BUILD_DOCKER_NOT_MODIFIED_ERR = StatusCode(enums.StatusCode_BUILD_DOCKER_NOT_MODIFIED_ERR)
const StatusCode_BUILD_DOCKER_NOT_IMPLEMENTED_ERR = StatusCode(enums.StatusCode_BUILD_DOCKER_NOT_IMPLEMENTED_ERR)
const StatusCode_BUILD_DOCKER_DATA_LOSS_ERR = StatusCode(enums.StatusCode_BUILD_DOCKER_DATA_LOSS_ERR)
const StatusCode_BUILD_DOCKER_FORBIDDEN_ERR = StatusCode(enums.StatusCode_BUILD_DOCKER_FORBIDDEN_ERR)
const StatusCode_BUILD_DOCKER_CONFLICT_ERR = StatusCode(enums.StatusCode_BUILD_DOCKER_CONFLICT_ERR)
const StatusCode_BUILD_DOCKER_ERROR_NOT_FOUND = StatusCode(enums.StatusCode_BUILD_DOCKER_ERROR_NOT_FOUND)
const StatusCode_BUILD_DOCKER_INVALID_PARAM_ERR = StatusCode(enums.StatusCode_BUILD_DOCKER_INVALID_PARAM_ERR)
const StatusCode_BUILD_DOCKERFILE_NOT_FOUND = StatusCode(enums.StatusCode_BUILD_DOCKERFILE_NOT_FOUND)
const StatusCode_BUILD_DOCKER_CACHE_FROM_PULL_ERR = StatusCode(enums.StatusCode_BUILD_DOCKER_CACHE_FROM_PULL_ERR)
const StatusCode_BUILD_DOCKER_GET_DIGEST_ERR = StatusCode(enums.StatusCode_BUILD_DOCKER_GET_DIGEST_ERR)
const StatusCode_BUILD_REGISTRY_GET_DIGEST_ERR = StatusCode(enums.StatusCode_BUILD_REGISTRY_GET_DIGEST_ERR)
const StatusCode_BUILD_UNKNOWN_JIB_PLUGIN_TYPE = StatusCode(enums.StatusCode_BUILD_UNKNOWN_JIB_PLUGIN_TYPE)
const StatusCode_BUILD_JIB_GRADLE_DEP_ERR = StatusCode(enums.StatusCode_BUILD_JIB_GRADLE_DEP_ERR)
const StatusCode_BUILD_JIB_MAVEN_DEP_ERR = StatusCode(enums.StatusCode_BUILD_JIB_MAVEN_DEP_ERR)
const StatusCode_INIT_DOCKER_NETWORK_LISTING_CONTAINERS = StatusCode(enums.StatusCode_INIT_DOCKER_NETWORK_LISTING_CONTAINERS)
const StatusCode_INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME = StatusCode(enums.StatusCode_INIT_DOCKER_NETWORK_INVALID_CONTAINER_NAME)
const StatusCode_INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST = StatusCode(enums.StatusCode_INIT_DOCKER_NETWORK_CONTAINER_DOES_NOT_EXIST)
const StatusCode_INIT_DOCKER_NETWORK_INVALID_MODE = StatusCode(enums.StatusCode_INIT_DOCKER_NETWORK_INVALID_MODE)
const StatusCode_INIT_DOCKER_NETWORK_PARSE_ERR = StatusCode(enums.StatusCode_INIT_DOCKER_NETWORK_PARSE_ERR)
const StatusCode_STATUSCHECK_IMAGE_PULL_ERR = StatusCode(enums.StatusCode_STATUSCHECK_IMAGE_PULL_ERR)
const StatusCode_STATUSCHECK_CONTAINER_CREATING = StatusCode(enums.StatusCode_STATUSCHECK_CONTAINER_CREATING)
const StatusCode_STATUSCHECK_RUN_CONTAINER_ERR = StatusCode(enums.StatusCode_STATUSCHECK_RUN_CONTAINER_ERR)
const StatusCode_STATUSCHECK_CONTAINER_TERMINATED = StatusCode(enums.StatusCode_STATUSCHECK_CONTAINER_TERMINATED)
const StatusCode_STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING = StatusCode(enums.StatusCode_STATUSCHECK_DEPLOYMENT_ROLLOUT_PENDING)
const StatusCode_STATUSCHECK_CONTAINER_RESTARTING = StatusCode(enums.StatusCode_STATUSCHECK_CONTAINER_RESTARTING)
const StatusCode_STATUSCHECK_UNHEALTHY = StatusCode(enums.StatusCode_STATUSCHECK_UNHEALTHY)
const StatusCode_STATUSCHECK_NODE_MEMORY_PRESSURE = StatusCode(enums.StatusCode_STATUSCHECK_NODE_MEMORY_PRESSURE)
const StatusCode_STATUSCHECK_NODE_DISK_PRESSURE = StatusCode(enums.StatusCode_STATUSCHECK_NODE_DISK_PRESSURE)
const StatusCode_STATUSCHECK_NODE_NETWORK_UNAVAILABLE = StatusCode(enums.StatusCode_STATUSCHECK_NODE_NETWORK_UNAVAILABLE)
const StatusCode_STATUSCHECK_NODE_PID_PRESSURE = StatusCode(enums.StatusCode_STATUSCHECK_NODE_PID_PRESSURE)
const StatusCode_STATUSCHECK_NODE_UNSCHEDULABLE = StatusCode(enums.StatusCode_STATUSCHECK_NODE_UNSCHEDULABLE)
const StatusCode_STATUSCHECK_NODE_UNREACHABLE = StatusCode(enums.StatusCode_STATUSCHECK_NODE_UNREACHABLE)
const StatusCode_STATUSCHECK_NODE_NOT_READY = StatusCode(enums.StatusCode_STATUSCHECK_NODE_NOT_READY)
const StatusCode_STATUSCHECK_FAILED_SCHEDULING = StatusCode(enums.StatusCode_STATUSCHECK_FAILED_SCHEDULING)
const StatusCode_STATUSCHECK_KUBECTL_CONNECTION_ERR = StatusCode(enums.StatusCode_STATUSCHECK_KUBECTL_CONNECTION_ERR)
const StatusCode_STATUSCHECK_KUBECTL_PID_KILLED = StatusCode(enums.StatusCode_STATUSCHECK_KUBECTL_PID_KILLED)
const StatusCode_STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR = StatusCode(enums.StatusCode_STATUSCHECK_KUBECTL_CLIENT_FETCH_ERR)
const StatusCode_STATUSCHECK_DEPLOYMENT_FETCH_ERR = StatusCode(enums.StatusCode_STATUSCHECK_DEPLOYMENT_FETCH_ERR)
const StatusCode_STATUSCHECK_POD_INITIALIZING = StatusCode(enums.StatusCode_STATUSCHECK_POD_INITIALIZING)
const StatusCode_UNKNOWN_ERROR = StatusCode(enums.StatusCode_UNKNOWN_ERROR)
const StatusCode_STATUSCHECK_UNKNOWN = StatusCode(enums.StatusCode_STATUSCHECK_UNKNOWN)
const StatusCode_STATUSCHECK_UNKNOWN_UNSCHEDULABLE = StatusCode(enums.StatusCode_STATUSCHECK_UNKNOWN_UNSCHEDULABLE)
const StatusCode_STATUSCHECK_CONTAINER_WAITING_UNKNOWN = StatusCode(enums.StatusCode_STATUSCHECK_CONTAINER_WAITING_UNKNOWN)
const StatusCode_STATUSCHECK_UNKNOWN_EVENT = StatusCode(enums.StatusCode_STATUSCHECK_UNKNOWN_EVENT)
const StatusCode_DEPLOY_UNKNOWN = StatusCode(enums.StatusCode_DEPLOY_UNKNOWN)
const StatusCode_SYNC_UNKNOWN = StatusCode(enums.StatusCode_SYNC_UNKNOWN)
const StatusCode_BUILD_UNKNOWN = StatusCode(enums.StatusCode_BUILD_UNKNOWN)
const StatusCode_DEVINIT_UNKNOWN = StatusCode(enums.StatusCode_DEVINIT_UNKNOWN)
const StatusCode_CLEANUP_UNKNOWN = StatusCode(enums.StatusCode_CLEANUP_UNKNOWN)
const StatusCode_INIT_UNKNOWN = StatusCode(enums.StatusCode_INIT_UNKNOWN)
const StatusCode_BUILD_DOCKER_UNKNOWN = StatusCode(enums.StatusCode_BUILD_DOCKER_UNKNOWN)
const StatusCode_TEST_UNKNOWN = StatusCode(enums.StatusCode_TEST_UNKNOWN)
const StatusCode_SYNC_INIT_ERROR = StatusCode(enums.StatusCode_SYNC_INIT_ERROR)
const StatusCode_DEVINIT_REGISTER_BUILD_DEPS = StatusCode(enums.StatusCode_DEVINIT_REGISTER_BUILD_DEPS)
const StatusCode_DEVINIT_REGISTER_TEST_DEPS = StatusCode(enums.StatusCode_DEVINIT_REGISTER_TEST_DEPS)
const StatusCode_DEVINIT_REGISTER_DEPLOY_DEPS = StatusCode(enums.StatusCode_DEVINIT_REGISTER_DEPLOY_DEPS)
const StatusCode_DEVINIT_REGISTER_CONFIG_DEP = StatusCode(enums.StatusCode_DEVINIT_REGISTER_CONFIG_DEP)
const StatusCode_DEVINIT_UNSUPPORTED_V1_MANIFEST = StatusCode(enums.StatusCode_DEVINIT_UNSUPPORTED_V1_MANIFEST)
const StatusCode_STATUSCHECK_USER_CANCELLED = StatusCode(enums.StatusCode_STATUSCHECK_USER_CANCELLED)
const StatusCode_STATUSCHECK_DEADLINE_EXCEEDED = StatusCode(enums.StatusCode_STATUSCHECK_DEADLINE_EXCEEDED)
const StatusCode_BUILD_CANCELLED = StatusCode(enums.StatusCode_BUILD_CANCELLED)
const StatusCode_DEPLOY_CANCELLED = StatusCode(enums.StatusCode_DEPLOY_CANCELLED)
const StatusCode_BUILD_DOCKER_CANCELLED = StatusCode(enums.StatusCode_BUILD_DOCKER_CANCELLED)
const StatusCode_BUILD_DOCKER_DEADLINE = StatusCode(enums.StatusCode_BUILD_DOCKER_DEADLINE)
const StatusCode_INIT_CREATE_TAGGER_ERROR = StatusCode(enums.StatusCode_INIT_CREATE_TAGGER_ERROR)
const StatusCode_INIT_MINIKUBE_PAUSED_ERROR = StatusCode(enums.StatusCode_INIT_MINIKUBE_PAUSED_ERROR)
const StatusCode_INIT_MINIKUBE_NOT_RUNNING_ERROR = StatusCode(enums.StatusCode_INIT_MINIKUBE_NOT_RUNNING_ERROR)
const StatusCode_INIT_CREATE_BUILDER_ERROR = StatusCode(enums.StatusCode_INIT_CREATE_BUILDER_ERROR)
const StatusCode_INIT_CREATE_DEPLOYER_ERROR = StatusCode(enums.StatusCode_INIT_CREATE_DEPLOYER_ERROR)
const StatusCode_INIT_CREATE_TEST_DEP_ERROR = StatusCode(enums.StatusCode_INIT_CREATE_TEST_DEP_ERROR)
const StatusCode_INIT_CACHE_ERROR = StatusCode(enums.StatusCode_INIT_CACHE_ERROR)
const StatusCode_INIT_CREATE_WATCH_TRIGGER_ERROR = StatusCode(enums.StatusCode_INIT_CREATE_WATCH_TRIGGER_ERROR)
const StatusCode_INIT_CREATE_ARTIFACT_DEP_ERROR = StatusCode(enums.StatusCode_INIT_CREATE_ARTIFACT_DEP_ERROR)
const StatusCode_DEPLOY_CLUSTER_CONNECTION_ERR = StatusCode(enums.StatusCode_DEPLOY_CLUSTER_CONNECTION_ERR)
const StatusCode_DEPLOY_DEBUG_HELPER_RETRIEVE_ERR = StatusCode(enums.StatusCode_DEPLOY_DEBUG_HELPER_RETRIEVE_ERR)
const StatusCode_DEPLOY_CLEANUP_ERR = StatusCode(enums.StatusCode_DEPLOY_CLEANUP_ERR)
const StatusCode_DEPLOY_HELM_APPLY_LABELS = StatusCode(enums.StatusCode_DEPLOY_HELM_APPLY_LABELS)
const StatusCode_DEPLOY_HELM_USER_ERR = StatusCode(enums.StatusCode_DEPLOY_HELM_USER_ERR)
const StatusCode_DEPLOY_NO_MATCHING_BUILD = StatusCode(enums.StatusCode_DEPLOY_NO_MATCHING_BUILD)
const StatusCode_DEPLOY_HELM_VERSION_ERR = StatusCode(enums.StatusCode_DEPLOY_HELM_VERSION_ERR)
const StatusCode_DEPLOY_HELM_MIN_VERSION_ERR = StatusCode(enums.StatusCode_DEPLOY_HELM_MIN_VERSION_ERR)
const StatusCode_DEPLOY_KUBECTL_VERSION_ERR = StatusCode(enums.StatusCode_DEPLOY_KUBECTL_VERSION_ERR)
const StatusCode_DEPLOY_KUBECTL_OFFLINE_MODE_ERR = StatusCode(enums.StatusCode_DEPLOY_KUBECTL_OFFLINE_MODE_ERR)
const StatusCode_DEPLOY_ERR_WAITING_FOR_DELETION = StatusCode(enums.StatusCode_DEPLOY_ERR_WAITING_FOR_DELETION)
const StatusCode_DEPLOY_READ_MANIFEST_ERR = StatusCode(enums.StatusCode_DEPLOY_READ_MANIFEST_ERR)
const StatusCode_DEPLOY_READ_REMOTE_MANIFEST_ERR = StatusCode(enums.StatusCode_DEPLOY_READ_REMOTE_MANIFEST_ERR)
const StatusCode_DEPLOY_LIST_MANIFEST_ERR = StatusCode(enums.StatusCode_DEPLOY_LIST_MANIFEST_ERR)
const StatusCode_DEPLOY_KUBECTL_USER_ERR = StatusCode(enums.StatusCode_DEPLOY_KUBECTL_USER_ERR)
const StatusCode_DEPLOY_KUSTOMIZE_USER_ERR = StatusCode(enums.StatusCode_DEPLOY_KUSTOMIZE_USER_ERR)
const StatusCode_DEPLOY_REPLACE_IMAGE_ERR = StatusCode(enums.StatusCode_DEPLOY_REPLACE_IMAGE_ERR)
const StatusCode_DEPLOY_TRANSFORM_MANIFEST_ERR = StatusCode(enums.StatusCode_DEPLOY_TRANSFORM_MANIFEST_ERR)
const StatusCode_DEPLOY_SET_LABEL_ERR = StatusCode(enums.StatusCode_DEPLOY_SET_LABEL_ERR)
const StatusCode_DEPLOY_MANIFEST_WRITE_ERR = StatusCode(enums.StatusCode_DEPLOY_MANIFEST_WRITE_ERR)
const StatusCode_DEPLOY_PARSE_MANIFEST_IMAGES_ERR = StatusCode(enums.StatusCode_DEPLOY_PARSE_MANIFEST_IMAGES_ERR)
const StatusCode_DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE = StatusCode(enums.StatusCode_DEPLOY_HELM_CREATE_NS_NOT_AVAILABLE)
const StatusCode_TEST_USER_CONFIG_ERR = StatusCode(enums.StatusCode_TEST_USER_CONFIG_ERR)
const StatusCode_TEST_CST_USER_ERR = StatusCode(enums.StatusCode_TEST_CST_USER_ERR)
const StatusCode_TEST_IMG_PULL_ERR = StatusCode(enums.StatusCode_TEST_IMG_PULL_ERR)
const StatusCode_TEST_CUSTOM_CMD_PARSE_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_CMD_PARSE_ERR)
const StatusCode_TEST_CUSTOM_CMD_RUN_NON_ZERO_EXIT_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_CMD_RUN_NON_ZERO_EXIT_ERR)
const StatusCode_TEST_CUSTOM_CMD_RUN_TIMEDOUT_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_CMD_RUN_TIMEDOUT_ERR)
const StatusCode_TEST_CUSTOM_CMD_RUN_CANCELLED_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_CMD_RUN_CANCELLED_ERR)
const StatusCode_TEST_CUSTOM_CMD_RUN_EXECUTION_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_CMD_RUN_EXECUTION_ERR)
const StatusCode_TEST_CUSTOM_CMD_RUN_EXITED_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_CMD_RUN_EXITED_ERR)
const StatusCode_TEST_CUSTOM_CMD_RUN_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_CMD_RUN_ERR)
const StatusCode_TEST_CUSTOM_DEPENDENCIES_CMD_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_DEPENDENCIES_CMD_ERR)
const StatusCode_TEST_CUSTOM_DEPENDENCIES_UNMARSHALL_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_DEPENDENCIES_UNMARSHALL_ERR)
const StatusCode_TEST_CUSTOM_CMD_RETRIEVE_ERR = StatusCode(enums.StatusCode_TEST_CUSTOM_CMD_RETRIEVE_ERR)
const StatusCode_CONFIG_FILE_PARSING_ERR = StatusCode(enums.StatusCode_CONFIG_FILE_PARSING_ERR)
const StatusCode_CONFIG_FILE_NOT_FOUND_ERR = StatusCode(enums.StatusCode_CONFIG_FILE_NOT_FOUND_ERR)
const StatusCode_CONFIG_DEPENDENCY_NOT_FOUND_ERR = StatusCode(enums.StatusCode_CONFIG_DEPENDENCY_NOT_FOUND_ERR)
const StatusCode_CONFIG_DUPLICATE_NAMES_SAME_FILE_ERR = StatusCode(enums.StatusCode_CONFIG_DUPLICATE_NAMES_SAME_FILE_ERR)
const StatusCode_CONFIG_DUPLICATE_NAMES_ACROSS_FILES_ERR = StatusCode(enums.StatusCode_CONFIG_DUPLICATE_NAMES_ACROSS_FILES_ERR)
const StatusCode_CONFIG_BAD_FILTER_ERR = StatusCode(enums.StatusCode_CONFIG_BAD_FILTER_ERR)
const StatusCode_CONFIG_ZERO_FOUND_ERR = StatusCode(enums.StatusCode_CONFIG_ZERO_FOUND_ERR)
const StatusCode_CONFIG_APPLY_PROFILES_ERR = StatusCode(enums.StatusCode_CONFIG_APPLY_PROFILES_ERR)
const StatusCode_CONFIG_DEFAULT_VALUES_ERR = StatusCode(enums.StatusCode_CONFIG_DEFAULT_VALUES_ERR)
const StatusCode_CONFIG_FILE_PATHS_SUBSTITUTION_ERR = StatusCode(enums.StatusCode_CONFIG_FILE_PATHS_SUBSTITUTION_ERR)
const StatusCode_CONFIG_MULTI_IMPORT_PROFILE_CONFLICT_ERR = StatusCode(enums.StatusCode_CONFIG_MULTI_IMPORT_PROFILE_CONFLICT_ERR)

// SuggestionCode from public import enums/enums.proto
type SuggestionCode = enums.SuggestionCode

var SuggestionCode_name = enums.SuggestionCode_name
var SuggestionCode_value = enums.SuggestionCode_value

const SuggestionCode_NIL = SuggestionCode(enums.SuggestionCode_NIL)
const SuggestionCode_ADD_DEFAULT_REPO = SuggestionCode(enums.SuggestionCode_ADD_DEFAULT_REPO)
const SuggestionCode_CHECK_DEFAULT_REPO = SuggestionCode(enums.SuggestionCode_CHECK_DEFAULT_REPO)
const SuggestionCode_CHECK_DEFAULT_REPO_GLOBAL_CONFIG = SuggestionCode(enums.SuggestionCode_CHECK_DEFAULT_REPO_GLOBAL_CONFIG)
const SuggestionCode_GCLOUD_DOCKER_AUTH_CONFIGURE = SuggestionCode(enums.SuggestionCode_GCLOUD_DOCKER_AUTH_CONFIGURE)
const SuggestionCode_DOCKER_AUTH_CONFIGURE = SuggestionCode(enums.SuggestionCode_DOCKER_AUTH_CONFIGURE)
const SuggestionCode_CHECK_GCLOUD_PROJECT = SuggestionCode(enums.SuggestionCode_CHECK_GCLOUD_PROJECT)
const SuggestionCode_CHECK_DOCKER_RUNNING = SuggestionCode(enums.SuggestionCode_CHECK_DOCKER_RUNNING)
const SuggestionCode_FIX_USER_BUILD_ERR = SuggestionCode(enums.SuggestionCode_FIX_USER_BUILD_ERR)
const SuggestionCode_DOCKER_BUILD_RETRY = SuggestionCode(enums.SuggestionCode_DOCKER_BUILD_RETRY)
const SuggestionCode_FIX_CACHE_FROM_ARTIFACT_CONFIG = SuggestionCode(enums.SuggestionCode_FIX_CACHE_FROM_ARTIFACT_CONFIG)
const SuggestionCode_FIX_SKAFFOLD_CONFIG_DOCKERFILE = SuggestionCode(enums.SuggestionCode_FIX_SKAFFOLD_CONFIG_DOCKERFILE)
const SuggestionCode_FIX_JIB_PLUGIN_CONFIGURATION = SuggestionCode(enums.SuggestionCode_FIX_JIB_PLUGIN_CONFIGURATION)
const SuggestionCode_FIX_DOCKER_NETWORK_CONTAINER_NAME = SuggestionCode(enums.SuggestionCode_FIX_DOCKER_NETWORK_CONTAINER_NAME)
const SuggestionCode_CHECK_DOCKER_NETWORK_CONTAINER_RUNNING = SuggestionCode(enums.SuggestionCode_CHECK_DOCKER_NETWORK_CONTAINER_RUNNING)
const SuggestionCode_FIX_DOCKER_NETWORK_MODE_WHEN_EXTRACTING_CONTAINER_NAME = SuggestionCode(enums.SuggestionCode_FIX_DOCKER_NETWORK_MODE_WHEN_EXTRACTING_CONTAINER_NAME)
const SuggestionCode_CHECK_CLUSTER_CONNECTION = SuggestionCode(enums.SuggestionCode_CHECK_CLUSTER_CONNECTION)
const SuggestionCode_CHECK_MINIKUBE_STATUS = SuggestionCode(enums.SuggestionCode_CHECK_MINIKUBE_STATUS)
const SuggestionCode_INSTALL_HELM = SuggestionCode(enums.SuggestionCode_INSTALL_HELM)
const SuggestionCode_UPGRADE_HELM = SuggestionCode(enums.SuggestionCode_UPGRADE_HELM)
const SuggestionCode_FIX_SKAFFOLD_CONFIG_HELM_ARTIFACT_OVERRIDES = SuggestionCode(enums.SuggestionCode_FIX_SKAFFOLD_CONFIG_HELM_ARTIFACT_OVERRIDES)
const SuggestionCode_UPGRADE_HELM32 = SuggestionCode(enums.SuggestionCode_UPGRADE_HELM32)
const SuggestionCode_FIX_SKAFFOLD_CONFIG_HELM_CREATE_NAMESPACE = SuggestionCode(enums.SuggestionCode_FIX_SKAFFOLD_CONFIG_HELM_CREATE_NAMESPACE)
const SuggestionCode_INSTALL_KUBECTL = SuggestionCode(enums.SuggestionCode_INSTALL_KUBECTL)
const SuggestionCode_CHECK_CONTAINER_LOGS = SuggestionCode(enums.SuggestionCode_CHECK_CONTAINER_LOGS)
const SuggestionCode_CHECK_READINESS_PROBE = SuggestionCode(enums.SuggestionCode_CHECK_READINESS_PROBE)
const SuggestionCode_CHECK_CONTAINER_IMAGE = SuggestionCode(enums.SuggestionCode_CHECK_CONTAINER_IMAGE)
const SuggestionCode_ADDRESS_NODE_MEMORY_PRESSURE = SuggestionCode(enums.SuggestionCode_ADDRESS_NODE_MEMORY_PRESSURE)
const SuggestionCode_ADDRESS_NODE_DISK_PRESSURE = SuggestionCode(enums.SuggestionCode_ADDRESS_NODE_DISK_PRESSURE)
const SuggestionCode_ADDRESS_NODE_NETWORK_UNAVAILABLE = SuggestionCode(enums.SuggestionCode_ADDRESS_NODE_NETWORK_UNAVAILABLE)
const SuggestionCode_ADDRESS_NODE_PID_PRESSURE = SuggestionCode(enums.SuggestionCode_ADDRESS_NODE_PID_PRESSURE)
const SuggestionCode_ADDRESS_NODE_UNSCHEDULABLE = SuggestionCode(enums.SuggestionCode_ADDRESS_NODE_UNSCHEDULABLE)
const SuggestionCode_ADDRESS_NODE_UNREACHABLE = SuggestionCode(enums.SuggestionCode_ADDRESS_NODE_UNREACHABLE)
const SuggestionCode_ADDRESS_NODE_NOT_READY = SuggestionCode(enums.SuggestionCode_ADDRESS_NODE_NOT_READY)
const SuggestionCode_ADDRESS_FAILED_SCHEDULING = SuggestionCode(enums.SuggestionCode_ADDRESS_FAILED_SCHEDULING)
const SuggestionCode_CHECK_HOST_CONNECTION = SuggestionCode(enums.SuggestionCode_CHECK_HOST_CONNECTION)
const SuggestionCode_START_MINIKUBE = SuggestionCode(enums.SuggestionCode_START_MINIKUBE)
const SuggestionCode_UNPAUSE_MINIKUBE = SuggestionCode(enums.SuggestionCode_UNPAUSE_MINIKUBE)
const SuggestionCode_RUN_DOCKER_PULL = SuggestionCode(enums.SuggestionCode_RUN_DOCKER_PULL)
const SuggestionCode_SET_RENDER_FLAG_OFFLINE_FALSE = SuggestionCode(enums.SuggestionCode_SET_RENDER_FLAG_OFFLINE_FALSE)
const SuggestionCode_CONFIG_CHECK_FILE_PATH = SuggestionCode(enums.SuggestionCode_CONFIG_CHECK_FILE_PATH)
const SuggestionCode_CONFIG_CHECK_DEPENDENCY_DEFINITION = SuggestionCode(enums.SuggestionCode_CONFIG_CHECK_DEPENDENCY_DEFINITION)
const SuggestionCode_CONFIG_CHANGE_NAMES = SuggestionCode(enums.SuggestionCode_CONFIG_CHANGE_NAMES)
const SuggestionCode_CONFIG_CHECK_FILTER = SuggestionCode(enums.SuggestionCode_CONFIG_CHECK_FILTER)
const SuggestionCode_CONFIG_CHECK_PROFILE_DEFINITION = SuggestionCode(enums.SuggestionCode_CONFIG_CHECK_PROFILE_DEFINITION)
const SuggestionCode_CONFIG_CHECK_DEPENDENCY_PROFILES_SELECTION = SuggestionCode(enums.SuggestionCode_CONFIG_CHECK_DEPENDENCY_PROFILES_SELECTION)
const SuggestionCode_OPEN_ISSUE = SuggestionCode(enums.SuggestionCode_OPEN_ISSUE)
const SuggestionCode_CHECK_CUSTOM_COMMAND = SuggestionCode(enums.SuggestionCode_CHECK_CUSTOM_COMMAND)
const SuggestionCode_FIX_CUSTOM_COMMAND_TIMEOUT = SuggestionCode(enums.SuggestionCode_FIX_CUSTOM_COMMAND_TIMEOUT)
const SuggestionCode_CHECK_CUSTOM_COMMAND_DEPENDENCIES_CMD = SuggestionCode(enums.SuggestionCode_CHECK_CUSTOM_COMMAND_DEPENDENCIES_CMD)
const SuggestionCode_CHECK_CUSTOM_COMMAND_DEPENDENCIES_PATHS = SuggestionCode(enums.SuggestionCode_CHECK_CUSTOM_COMMAND_DEPENDENCIES_PATHS)
const SuggestionCode_CHECK_TEST_COMMAND_AND_IMAGE_NAME = SuggestionCode(enums.SuggestionCode_CHECK_TEST_COMMAND_AND_IMAGE_NAME)

type StateResponse struct {
	State                *State   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateResponse) Reset()         { *m = StateResponse{} }
func (m *StateResponse) String() string { return proto.CompactTextString(m) }
func (*StateResponse) ProtoMessage()    {}
func (*StateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{0}
}

func (m *StateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StateResponse.Unmarshal(m, b)
}
func (m *StateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StateResponse.Marshal(b, m, deterministic)
}
func (m *StateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateResponse.Merge(m, src)
}
func (m *StateResponse) XXX_Size() int {
	return xxx_messageInfo_StateResponse.Size(m)
}
func (m *StateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StateResponse proto.InternalMessageInfo

func (m *StateResponse) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

type Response struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// `State` represents the current state of the Skaffold components
type State struct {
	BuildState           *BuildState                 `protobuf:"bytes,1,opt,name=buildState,proto3" json:"buildState,omitempty"`
	DeployState          *DeployState                `protobuf:"bytes,2,opt,name=deployState,proto3" json:"deployState,omitempty"`
	ForwardedPorts       map[int32]*PortForwardEvent `protobuf:"bytes,3,rep,name=forwardedPorts,proto3" json:"forwardedPorts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	StatusCheckState     *StatusCheckState           `protobuf:"bytes,4,opt,name=statusCheckState,proto3" json:"statusCheckState,omitempty"`
	FileSyncState        *FileSyncState              `protobuf:"bytes,5,opt,name=fileSyncState,proto3" json:"fileSyncState,omitempty"`
	DebuggingContainers  []*DebuggingContainerEvent  `protobuf:"bytes,6,rep,name=debuggingContainers,proto3" json:"debuggingContainers,omitempty"`
	Metadata             *Metadata                   `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	TestState            *TestState                  `protobuf:"bytes,8,opt,name=testState,proto3" json:"testState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{3}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetBuildState() *BuildState {
	if m != nil {
		return m.BuildState
	}
	return nil
}

func (m *State) GetDeployState() *DeployState {
	if m != nil {
		return m.DeployState
	}
	return nil
}

func (m *State) GetForwardedPorts() map[int32]*PortForwardEvent {
	if m != nil {
		return m.ForwardedPorts
	}
	return nil
}

func (m *State) GetStatusCheckState() *StatusCheckState {
	if m != nil {
		return m.StatusCheckState
	}
	return nil
}

func (m *State) GetFileSyncState() *FileSyncState {
	if m != nil {
		return m.FileSyncState
	}
	return nil
}

func (m *State) GetDebuggingContainers() []*DebuggingContainerEvent {
	if m != nil {
		return m.DebuggingContainers
	}
	return nil
}

func (m *State) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *State) GetTestState() *TestState {
	if m != nil {
		return m.TestState
	}
	return nil
}

type Metadata struct {
	Build  *BuildMetadata  `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	Deploy *DeployMetadata `protobuf:"bytes,2,opt,name=deploy,proto3" json:"deploy,omitempty"`
	Test   *TestMetadata   `protobuf:"bytes,3,opt,name=test,proto3" json:"test,omitempty"`
	// Additional key value pairs to describe the build pipeline
	Additional           map[string]string `protobuf:"bytes,99,rep,name=additional,proto3" json:"additional,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{4}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetBuild() *BuildMetadata {
	if m != nil {
		return m.Build
	}
	return nil
}

func (m *Metadata) GetDeploy() *DeployMetadata {
	if m != nil {
		return m.Deploy
	}
	return nil
}

func (m *Metadata) GetTest() *TestMetadata {
	if m != nil {
		return m.Test
	}
	return nil
}

func (m *Metadata) GetAdditional() map[string]string {
	if m != nil {
		return m.Additional
	}
	return nil
}

type BuildMetadata struct {
	NumberOfArtifacts int32                         `protobuf:"varint,1,opt,name=numberOfArtifacts,proto3" json:"numberOfArtifacts,omitempty"`
	Builders          []*BuildMetadata_ImageBuilder `protobuf:"bytes,2,rep,name=builders,proto3" json:"builders,omitempty"`
	Type              enums.BuildType               `protobuf:"varint,3,opt,name=type,proto3,enum=proto.enums.BuildType" json:"type,omitempty"`
	// Additional key value pairs to describe the deploy pipeline
	Additional           map[string]string `protobuf:"bytes,99,rep,name=additional,proto3" json:"additional,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BuildMetadata) Reset()         { *m = BuildMetadata{} }
func (m *BuildMetadata) String() string { return proto.CompactTextString(m) }
func (*BuildMetadata) ProtoMessage()    {}
func (*BuildMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{5}
}

func (m *BuildMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildMetadata.Unmarshal(m, b)
}
func (m *BuildMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildMetadata.Marshal(b, m, deterministic)
}
func (m *BuildMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildMetadata.Merge(m, src)
}
func (m *BuildMetadata) XXX_Size() int {
	return xxx_messageInfo_BuildMetadata.Size(m)
}
func (m *BuildMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_BuildMetadata proto.InternalMessageInfo

func (m *BuildMetadata) GetNumberOfArtifacts() int32 {
	if m != nil {
		return m.NumberOfArtifacts
	}
	return 0
}

func (m *BuildMetadata) GetBuilders() []*BuildMetadata_ImageBuilder {
	if m != nil {
		return m.Builders
	}
	return nil
}

func (m *BuildMetadata) GetType() enums.BuildType {
	if m != nil {
		return m.Type
	}
	return enums.BuildType_UNKNOWN_BUILD_TYPE
}

func (m *BuildMetadata) GetAdditional() map[string]string {
	if m != nil {
		return m.Additional
	}
	return nil
}

type BuildMetadata_ImageBuilder struct {
	Type                 enums.BuilderType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.enums.BuilderType" json:"type,omitempty"`
	Count                int32             `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BuildMetadata_ImageBuilder) Reset()         { *m = BuildMetadata_ImageBuilder{} }
func (m *BuildMetadata_ImageBuilder) String() string { return proto.CompactTextString(m) }
func (*BuildMetadata_ImageBuilder) ProtoMessage()    {}
func (*BuildMetadata_ImageBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{5, 0}
}

func (m *BuildMetadata_ImageBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildMetadata_ImageBuilder.Unmarshal(m, b)
}
func (m *BuildMetadata_ImageBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildMetadata_ImageBuilder.Marshal(b, m, deterministic)
}
func (m *BuildMetadata_ImageBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildMetadata_ImageBuilder.Merge(m, src)
}
func (m *BuildMetadata_ImageBuilder) XXX_Size() int {
	return xxx_messageInfo_BuildMetadata_ImageBuilder.Size(m)
}
func (m *BuildMetadata_ImageBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildMetadata_ImageBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_BuildMetadata_ImageBuilder proto.InternalMessageInfo

func (m *BuildMetadata_ImageBuilder) GetType() enums.BuilderType {
	if m != nil {
		return m.Type
	}
	return enums.BuilderType_UNKNOWN_BUILDER_TYPE
}

func (m *BuildMetadata_ImageBuilder) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// TestMetadata describes the test pipeline
type TestMetadata struct {
	Testers              []*TestMetadata_Tester `protobuf:"bytes,1,rep,name=Testers,proto3" json:"Testers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TestMetadata) Reset()         { *m = TestMetadata{} }
func (m *TestMetadata) String() string { return proto.CompactTextString(m) }
func (*TestMetadata) ProtoMessage()    {}
func (*TestMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{6}
}

func (m *TestMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMetadata.Unmarshal(m, b)
}
func (m *TestMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMetadata.Marshal(b, m, deterministic)
}
func (m *TestMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMetadata.Merge(m, src)
}
func (m *TestMetadata) XXX_Size() int {
	return xxx_messageInfo_TestMetadata.Size(m)
}
func (m *TestMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_TestMetadata proto.InternalMessageInfo

func (m *TestMetadata) GetTesters() []*TestMetadata_Tester {
	if m != nil {
		return m.Testers
	}
	return nil
}

type TestMetadata_Tester struct {
	Type                 enums.TesterType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.enums.TesterType" json:"type,omitempty"`
	Count                int32            `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TestMetadata_Tester) Reset()         { *m = TestMetadata_Tester{} }
func (m *TestMetadata_Tester) String() string { return proto.CompactTextString(m) }
func (*TestMetadata_Tester) ProtoMessage()    {}
func (*TestMetadata_Tester) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{6, 0}
}

func (m *TestMetadata_Tester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMetadata_Tester.Unmarshal(m, b)
}
func (m *TestMetadata_Tester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMetadata_Tester.Marshal(b, m, deterministic)
}
func (m *TestMetadata_Tester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMetadata_Tester.Merge(m, src)
}
func (m *TestMetadata_Tester) XXX_Size() int {
	return xxx_messageInfo_TestMetadata_Tester.Size(m)
}
func (m *TestMetadata_Tester) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMetadata_Tester.DiscardUnknown(m)
}

var xxx_messageInfo_TestMetadata_Tester proto.InternalMessageInfo

func (m *TestMetadata_Tester) GetType() enums.TesterType {
	if m != nil {
		return m.Type
	}
	return enums.TesterType_UNKNOWN_TEST_TYPE
}

func (m *TestMetadata_Tester) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type DeployMetadata struct {
	Deployers            []*DeployMetadata_Deployer `protobuf:"bytes,1,rep,name=deployers,proto3" json:"deployers,omitempty"`
	Cluster              enums.ClusterType          `protobuf:"varint,2,opt,name=cluster,proto3,enum=proto.enums.ClusterType" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DeployMetadata) Reset()         { *m = DeployMetadata{} }
func (m *DeployMetadata) String() string { return proto.CompactTextString(m) }
func (*DeployMetadata) ProtoMessage()    {}
func (*DeployMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{7}
}

func (m *DeployMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployMetadata.Unmarshal(m, b)
}
func (m *DeployMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployMetadata.Marshal(b, m, deterministic)
}
func (m *DeployMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployMetadata.Merge(m, src)
}
func (m *DeployMetadata) XXX_Size() int {
	return xxx_messageInfo_DeployMetadata.Size(m)
}
func (m *DeployMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DeployMetadata proto.InternalMessageInfo

func (m *DeployMetadata) GetDeployers() []*DeployMetadata_Deployer {
	if m != nil {
		return m.Deployers
	}
	return nil
}

func (m *DeployMetadata) GetCluster() enums.ClusterType {
	if m != nil {
		return m.Cluster
	}
	return enums.ClusterType_UNKNOWN_CLUSTER_TYPE
}

type DeployMetadata_Deployer struct {
	Type                 enums.DeployerType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.enums.DeployerType" json:"type,omitempty"`
	Count                int32              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeployMetadata_Deployer) Reset()         { *m = DeployMetadata_Deployer{} }
func (m *DeployMetadata_Deployer) String() string { return proto.CompactTextString(m) }
func (*DeployMetadata_Deployer) ProtoMessage()    {}
func (*DeployMetadata_Deployer) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{7, 0}
}

func (m *DeployMetadata_Deployer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployMetadata_Deployer.Unmarshal(m, b)
}
func (m *DeployMetadata_Deployer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployMetadata_Deployer.Marshal(b, m, deterministic)
}
func (m *DeployMetadata_Deployer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployMetadata_Deployer.Merge(m, src)
}
func (m *DeployMetadata_Deployer) XXX_Size() int {
	return xxx_messageInfo_DeployMetadata_Deployer.Size(m)
}
func (m *DeployMetadata_Deployer) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployMetadata_Deployer.DiscardUnknown(m)
}

var xxx_messageInfo_DeployMetadata_Deployer proto.InternalMessageInfo

func (m *DeployMetadata_Deployer) GetType() enums.DeployerType {
	if m != nil {
		return m.Type
	}
	return enums.DeployerType_UNKNOWN_DEPLOYER_TYPE
}

func (m *DeployMetadata_Deployer) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

// `BuildState` maps Skaffold artifacts to their current build states
type BuildState struct {
	// A map of `artifact name -> build-state`.
	// Artifact name is defined in the `skaffold.yaml`.
	// The `build-state` can be: <br>
	// - `"NotStarted"`: not yet started <br>
	// - `"InProgress"`: build started <br>
	// - `"Complete"`: build succeeded <br>
	// - `"Failed"`: build failed
	Artifacts            map[string]string `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AutoTrigger          bool              `protobuf:"varint,2,opt,name=autoTrigger,proto3" json:"autoTrigger,omitempty"`
	StatusCode           enums.StatusCode  `protobuf:"varint,3,opt,name=statusCode,proto3,enum=proto.enums.StatusCode" json:"statusCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BuildState) Reset()         { *m = BuildState{} }
func (m *BuildState) String() string { return proto.CompactTextString(m) }
func (*BuildState) ProtoMessage()    {}
func (*BuildState) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{8}
}

func (m *BuildState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildState.Unmarshal(m, b)
}
func (m *BuildState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildState.Marshal(b, m, deterministic)
}
func (m *BuildState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildState.Merge(m, src)
}
func (m *BuildState) XXX_Size() int {
	return xxx_messageInfo_BuildState.Size(m)
}
func (m *BuildState) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildState.DiscardUnknown(m)
}

var xxx_messageInfo_BuildState proto.InternalMessageInfo

func (m *BuildState) GetArtifacts() map[string]string {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *BuildState) GetAutoTrigger() bool {
	if m != nil {
		return m.AutoTrigger
	}
	return false
}

func (m *BuildState) GetStatusCode() enums.StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return enums.StatusCode_OK
}

// `TestState` describes the current state of the test
type TestState struct {
	// Status of the current test
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Teststate status code
	StatusCode           enums.StatusCode `protobuf:"varint,2,opt,name=statusCode,proto3,enum=proto.enums.StatusCode" json:"statusCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TestState) Reset()         { *m = TestState{} }
func (m *TestState) String() string { return proto.CompactTextString(m) }
func (*TestState) ProtoMessage()    {}
func (*TestState) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{9}
}

func (m *TestState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestState.Unmarshal(m, b)
}
func (m *TestState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestState.Marshal(b, m, deterministic)
}
func (m *TestState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestState.Merge(m, src)
}
func (m *TestState) XXX_Size() int {
	return xxx_messageInfo_TestState.Size(m)
}
func (m *TestState) XXX_DiscardUnknown() {
	xxx_messageInfo_TestState.DiscardUnknown(m)
}

var xxx_messageInfo_TestState proto.InternalMessageInfo

func (m *TestState) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TestState) GetStatusCode() enums.StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return enums.StatusCode_OK
}

// `DeployState` describes the status of the current deploy
type DeployState struct {
	Status               string           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	AutoTrigger          bool             `protobuf:"varint,2,opt,name=autoTrigger,proto3" json:"autoTrigger,omitempty"`
	StatusCode           enums.StatusCode `protobuf:"varint,3,opt,name=statusCode,proto3,enum=proto.enums.StatusCode" json:"statusCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DeployState) Reset()         { *m = DeployState{} }
func (m *DeployState) String() string { return proto.CompactTextString(m) }
func (*DeployState) ProtoMessage()    {}
func (*DeployState) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{10}
}

func (m *DeployState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployState.Unmarshal(m, b)
}
func (m *DeployState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployState.Marshal(b, m, deterministic)
}
func (m *DeployState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployState.Merge(m, src)
}
func (m *DeployState) XXX_Size() int {
	return xxx_messageInfo_DeployState.Size(m)
}
func (m *DeployState) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployState.DiscardUnknown(m)
}

var xxx_messageInfo_DeployState proto.InternalMessageInfo

func (m *DeployState) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DeployState) GetAutoTrigger() bool {
	if m != nil {
		return m.AutoTrigger
	}
	return false
}

func (m *DeployState) GetStatusCode() enums.StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return enums.StatusCode_OK
}

// `StatusCheckState` describes the state of status check of current deployed resources.
type StatusCheckState struct {
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// A map of `resource name -> status-check-state`. Where `resource-name` is the kubernetes resource name.
	// The `status-check-state` can be <br>
	// - `"NotStarted"`: indicates that `status-check` has just started. <br>
	// - `"InProgress"`: InProgress is sent after every resource check is complete. <br>
	// - `"Succeeded"`:
	// - `"Failed"`:
	Resources map[string]string `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// StatusCheck statusCode
	StatusCode           enums.StatusCode `protobuf:"varint,3,opt,name=statusCode,proto3,enum=proto.enums.StatusCode" json:"statusCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StatusCheckState) Reset()         { *m = StatusCheckState{} }
func (m *StatusCheckState) String() string { return proto.CompactTextString(m) }
func (*StatusCheckState) ProtoMessage()    {}
func (*StatusCheckState) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{11}
}

func (m *StatusCheckState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusCheckState.Unmarshal(m, b)
}
func (m *StatusCheckState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusCheckState.Marshal(b, m, deterministic)
}
func (m *StatusCheckState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusCheckState.Merge(m, src)
}
func (m *StatusCheckState) XXX_Size() int {
	return xxx_messageInfo_StatusCheckState.Size(m)
}
func (m *StatusCheckState) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusCheckState.DiscardUnknown(m)
}

var xxx_messageInfo_StatusCheckState proto.InternalMessageInfo

func (m *StatusCheckState) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StatusCheckState) GetResources() map[string]string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *StatusCheckState) GetStatusCode() enums.StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return enums.StatusCode_OK
}

// `FileSyncState` contains the status of the current file sync
type FileSyncState struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	AutoTrigger          bool     `protobuf:"varint,2,opt,name=autoTrigger,proto3" json:"autoTrigger,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileSyncState) Reset()         { *m = FileSyncState{} }
func (m *FileSyncState) String() string { return proto.CompactTextString(m) }
func (*FileSyncState) ProtoMessage()    {}
func (*FileSyncState) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{12}
}

func (m *FileSyncState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileSyncState.Unmarshal(m, b)
}
func (m *FileSyncState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileSyncState.Marshal(b, m, deterministic)
}
func (m *FileSyncState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileSyncState.Merge(m, src)
}
func (m *FileSyncState) XXX_Size() int {
	return xxx_messageInfo_FileSyncState.Size(m)
}
func (m *FileSyncState) XXX_DiscardUnknown() {
	xxx_messageInfo_FileSyncState.DiscardUnknown(m)
}

var xxx_messageInfo_FileSyncState proto.InternalMessageInfo

func (m *FileSyncState) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *FileSyncState) GetAutoTrigger() bool {
	if m != nil {
		return m.AutoTrigger
	}
	return false
}

// `Event` describes an event in the Skaffold process.
// It is one of MetaEvent, BuildEvent, TestEvent, DeployEvent, PortEvent, StatusCheckEvent, ResourceStatusCheckEvent, FileSyncEvent, or DebuggingContainerEvent.
type Event struct {
	// Types that are valid to be assigned to EventType:
	//	*Event_MetaEvent
	//	*Event_SkaffoldLogEvent
	//	*Event_ApplicationLogEvent
	//	*Event_TaskEvent
	//	*Event_BuildSubtaskEvent
	//	*Event_DeploySubtaskEvent
	//	*Event_PortEvent
	//	*Event_StatusCheckSubtaskEvent
	//	*Event_FileSyncEvent
	//	*Event_DebuggingContainerEvent
	//	*Event_TerminationEvent
	//	*Event_TestEvent
	EventType            isEvent_EventType `protobuf_oneof:"event_type"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{13}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_EventType interface {
	isEvent_EventType()
}

type Event_MetaEvent struct {
	MetaEvent *MetaEvent `protobuf:"bytes,1,opt,name=metaEvent,proto3,oneof"`
}

type Event_SkaffoldLogEvent struct {
	SkaffoldLogEvent *SkaffoldLogEvent `protobuf:"bytes,2,opt,name=skaffoldLogEvent,proto3,oneof"`
}

type Event_ApplicationLogEvent struct {
	ApplicationLogEvent *ApplicationLogEvent `protobuf:"bytes,3,opt,name=applicationLogEvent,proto3,oneof"`
}

type Event_TaskEvent struct {
	TaskEvent *TaskEvent `protobuf:"bytes,4,opt,name=taskEvent,proto3,oneof"`
}

type Event_BuildSubtaskEvent struct {
	BuildSubtaskEvent *BuildSubtaskEvent `protobuf:"bytes,5,opt,name=buildSubtaskEvent,proto3,oneof"`
}

type Event_DeploySubtaskEvent struct {
	DeploySubtaskEvent *DeploySubtaskEvent `protobuf:"bytes,6,opt,name=deploySubtaskEvent,proto3,oneof"`
}

type Event_PortEvent struct {
	PortEvent *PortForwardEvent `protobuf:"bytes,7,opt,name=portEvent,proto3,oneof"`
}

type Event_StatusCheckSubtaskEvent struct {
	StatusCheckSubtaskEvent *StatusCheckSubtaskEvent `protobuf:"bytes,8,opt,name=statusCheckSubtaskEvent,proto3,oneof"`
}

type Event_FileSyncEvent struct {
	FileSyncEvent *FileSyncEvent `protobuf:"bytes,9,opt,name=fileSyncEvent,proto3,oneof"`
}

type Event_DebuggingContainerEvent struct {
	DebuggingContainerEvent *DebuggingContainerEvent `protobuf:"bytes,10,opt,name=debuggingContainerEvent,proto3,oneof"`
}

type Event_TerminationEvent struct {
	TerminationEvent *TerminationEvent `protobuf:"bytes,11,opt,name=terminationEvent,proto3,oneof"`
}

type Event_TestEvent struct {
	TestEvent *TestSubtaskEvent `protobuf:"bytes,12,opt,name=testEvent,proto3,oneof"`
}

func (*Event_MetaEvent) isEvent_EventType() {}

func (*Event_SkaffoldLogEvent) isEvent_EventType() {}

func (*Event_ApplicationLogEvent) isEvent_EventType() {}

func (*Event_TaskEvent) isEvent_EventType() {}

func (*Event_BuildSubtaskEvent) isEvent_EventType() {}

func (*Event_DeploySubtaskEvent) isEvent_EventType() {}

func (*Event_PortEvent) isEvent_EventType() {}

func (*Event_StatusCheckSubtaskEvent) isEvent_EventType() {}

func (*Event_FileSyncEvent) isEvent_EventType() {}

func (*Event_DebuggingContainerEvent) isEvent_EventType() {}

func (*Event_TerminationEvent) isEvent_EventType() {}

func (*Event_TestEvent) isEvent_EventType() {}

func (m *Event) GetEventType() isEvent_EventType {
	if m != nil {
		return m.EventType
	}
	return nil
}

func (m *Event) GetMetaEvent() *MetaEvent {
	if x, ok := m.GetEventType().(*Event_MetaEvent); ok {
		return x.MetaEvent
	}
	return nil
}

func (m *Event) GetSkaffoldLogEvent() *SkaffoldLogEvent {
	if x, ok := m.GetEventType().(*Event_SkaffoldLogEvent); ok {
		return x.SkaffoldLogEvent
	}
	return nil
}

func (m *Event) GetApplicationLogEvent() *ApplicationLogEvent {
	if x, ok := m.GetEventType().(*Event_ApplicationLogEvent); ok {
		return x.ApplicationLogEvent
	}
	return nil
}

func (m *Event) GetTaskEvent() *TaskEvent {
	if x, ok := m.GetEventType().(*Event_TaskEvent); ok {
		return x.TaskEvent
	}
	return nil
}

func (m *Event) GetBuildSubtaskEvent() *BuildSubtaskEvent {
	if x, ok := m.GetEventType().(*Event_BuildSubtaskEvent); ok {
		return x.BuildSubtaskEvent
	}
	return nil
}

func (m *Event) GetDeploySubtaskEvent() *DeploySubtaskEvent {
	if x, ok := m.GetEventType().(*Event_DeploySubtaskEvent); ok {
		return x.DeploySubtaskEvent
	}
	return nil
}

func (m *Event) GetPortEvent() *PortForwardEvent {
	if x, ok := m.GetEventType().(*Event_PortEvent); ok {
		return x.PortEvent
	}
	return nil
}

func (m *Event) GetStatusCheckSubtaskEvent() *StatusCheckSubtaskEvent {
	if x, ok := m.GetEventType().(*Event_StatusCheckSubtaskEvent); ok {
		return x.StatusCheckSubtaskEvent
	}
	return nil
}

func (m *Event) GetFileSyncEvent() *FileSyncEvent {
	if x, ok := m.GetEventType().(*Event_FileSyncEvent); ok {
		return x.FileSyncEvent
	}
	return nil
}

func (m *Event) GetDebuggingContainerEvent() *DebuggingContainerEvent {
	if x, ok := m.GetEventType().(*Event_DebuggingContainerEvent); ok {
		return x.DebuggingContainerEvent
	}
	return nil
}

func (m *Event) GetTerminationEvent() *TerminationEvent {
	if x, ok := m.GetEventType().(*Event_TerminationEvent); ok {
		return x.TerminationEvent
	}
	return nil
}

func (m *Event) GetTestEvent() *TestSubtaskEvent {
	if x, ok := m.GetEventType().(*Event_TestEvent); ok {
		return x.TestEvent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Event) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Event_MetaEvent)(nil),
		(*Event_SkaffoldLogEvent)(nil),
		(*Event_ApplicationLogEvent)(nil),
		(*Event_TaskEvent)(nil),
		(*Event_BuildSubtaskEvent)(nil),
		(*Event_DeploySubtaskEvent)(nil),
		(*Event_PortEvent)(nil),
		(*Event_StatusCheckSubtaskEvent)(nil),
		(*Event_FileSyncEvent)(nil),
		(*Event_DebuggingContainerEvent)(nil),
		(*Event_TerminationEvent)(nil),
		(*Event_TestEvent)(nil),
	}
}

// `TerminationEvent` marks the end of the skaffold session
type TerminationEvent struct {
	Status               string         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Err                  *ActionableErr `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TerminationEvent) Reset()         { *m = TerminationEvent{} }
func (m *TerminationEvent) String() string { return proto.CompactTextString(m) }
func (*TerminationEvent) ProtoMessage()    {}
func (*TerminationEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{14}
}

func (m *TerminationEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminationEvent.Unmarshal(m, b)
}
func (m *TerminationEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminationEvent.Marshal(b, m, deterministic)
}
func (m *TerminationEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminationEvent.Merge(m, src)
}
func (m *TerminationEvent) XXX_Size() int {
	return xxx_messageInfo_TerminationEvent.Size(m)
}
func (m *TerminationEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminationEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TerminationEvent proto.InternalMessageInfo

func (m *TerminationEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TerminationEvent) GetErr() *ActionableErr {
	if m != nil {
		return m.Err
	}
	return nil
}

// `ActionableErr` defines an error that occurred along with an optional list of suggestions
type ActionableErr struct {
	ErrCode              enums.StatusCode `protobuf:"varint,1,opt,name=errCode,proto3,enum=proto.enums.StatusCode" json:"errCode,omitempty"`
	Message              string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Suggestions          []*Suggestion    `protobuf:"bytes,3,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActionableErr) Reset()         { *m = ActionableErr{} }
func (m *ActionableErr) String() string { return proto.CompactTextString(m) }
func (*ActionableErr) ProtoMessage()    {}
func (*ActionableErr) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{15}
}

func (m *ActionableErr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionableErr.Unmarshal(m, b)
}
func (m *ActionableErr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionableErr.Marshal(b, m, deterministic)
}
func (m *ActionableErr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionableErr.Merge(m, src)
}
func (m *ActionableErr) XXX_Size() int {
	return xxx_messageInfo_ActionableErr.Size(m)
}
func (m *ActionableErr) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionableErr.DiscardUnknown(m)
}

var xxx_messageInfo_ActionableErr proto.InternalMessageInfo

func (m *ActionableErr) GetErrCode() enums.StatusCode {
	if m != nil {
		return m.ErrCode
	}
	return enums.StatusCode_OK
}

func (m *ActionableErr) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ActionableErr) GetSuggestions() []*Suggestion {
	if m != nil {
		return m.Suggestions
	}
	return nil
}

// `MetaEvent` provides general information regarding Skaffold
type MetaEvent struct {
	Entry                string    `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	Metadata             *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MetaEvent) Reset()         { *m = MetaEvent{} }
func (m *MetaEvent) String() string { return proto.CompactTextString(m) }
func (*MetaEvent) ProtoMessage()    {}
func (*MetaEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{16}
}

func (m *MetaEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaEvent.Unmarshal(m, b)
}
func (m *MetaEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaEvent.Marshal(b, m, deterministic)
}
func (m *MetaEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaEvent.Merge(m, src)
}
func (m *MetaEvent) XXX_Size() int {
	return xxx_messageInfo_MetaEvent.Size(m)
}
func (m *MetaEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaEvent.DiscardUnknown(m)
}

var xxx_messageInfo_MetaEvent proto.InternalMessageInfo

func (m *MetaEvent) GetEntry() string {
	if m != nil {
		return m.Entry
	}
	return ""
}

func (m *MetaEvent) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// `SkaffoldLogEvent` represents a piece of output that comes from a skaffold run, for example: "Generating tags...", "Step 1/3 : FROM gcr.io/distroless/base"
type SkaffoldLogEvent struct {
	TaskId               string         `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	SubtaskId            string         `protobuf:"bytes,2,opt,name=subtask_id,json=subtaskId,proto3" json:"subtask_id,omitempty"`
	Origin               string         `protobuf:"bytes,3,opt,name=origin,proto3" json:"origin,omitempty"`
	Level                enums.LogLevel `protobuf:"varint,4,opt,name=level,proto3,enum=proto.enums.LogLevel" json:"level,omitempty"`
	Message              string         `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SkaffoldLogEvent) Reset()         { *m = SkaffoldLogEvent{} }
func (m *SkaffoldLogEvent) String() string { return proto.CompactTextString(m) }
func (*SkaffoldLogEvent) ProtoMessage()    {}
func (*SkaffoldLogEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{17}
}

func (m *SkaffoldLogEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkaffoldLogEvent.Unmarshal(m, b)
}
func (m *SkaffoldLogEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkaffoldLogEvent.Marshal(b, m, deterministic)
}
func (m *SkaffoldLogEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkaffoldLogEvent.Merge(m, src)
}
func (m *SkaffoldLogEvent) XXX_Size() int {
	return xxx_messageInfo_SkaffoldLogEvent.Size(m)
}
func (m *SkaffoldLogEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SkaffoldLogEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SkaffoldLogEvent proto.InternalMessageInfo

func (m *SkaffoldLogEvent) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *SkaffoldLogEvent) GetSubtaskId() string {
	if m != nil {
		return m.SubtaskId
	}
	return ""
}

func (m *SkaffoldLogEvent) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *SkaffoldLogEvent) GetLevel() enums.LogLevel {
	if m != nil {
		return m.Level
	}
	return enums.LogLevel_DEBUG
}

func (m *SkaffoldLogEvent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// `ApplicationLogEvent` represents a log that comes from one of the pods running in the user's application.
type ApplicationLogEvent struct {
	ContainerName        string   `protobuf:"bytes,1,opt,name=containerName,proto3" json:"containerName,omitempty"`
	PodName              string   `protobuf:"bytes,2,opt,name=podName,proto3" json:"podName,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplicationLogEvent) Reset()         { *m = ApplicationLogEvent{} }
func (m *ApplicationLogEvent) String() string { return proto.CompactTextString(m) }
func (*ApplicationLogEvent) ProtoMessage()    {}
func (*ApplicationLogEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{18}
}

func (m *ApplicationLogEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationLogEvent.Unmarshal(m, b)
}
func (m *ApplicationLogEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationLogEvent.Marshal(b, m, deterministic)
}
func (m *ApplicationLogEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationLogEvent.Merge(m, src)
}
func (m *ApplicationLogEvent) XXX_Size() int {
	return xxx_messageInfo_ApplicationLogEvent.Size(m)
}
func (m *ApplicationLogEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationLogEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationLogEvent proto.InternalMessageInfo

func (m *ApplicationLogEvent) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

func (m *ApplicationLogEvent) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *ApplicationLogEvent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// `TaskEvent` represent the different larger phases of a skaffold session, for example Build, Deploy, etc.
// If a phase fails, an actionable error will be attached
type TaskEvent struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Task                 string         `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Iteration            int32          `protobuf:"varint,3,opt,name=iteration,proto3" json:"iteration,omitempty"`
	Status               string         `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	ActionableErr        *ActionableErr `protobuf:"bytes,5,opt,name=actionableErr,proto3" json:"actionableErr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TaskEvent) Reset()         { *m = TaskEvent{} }
func (m *TaskEvent) String() string { return proto.CompactTextString(m) }
func (*TaskEvent) ProtoMessage()    {}
func (*TaskEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{19}
}

func (m *TaskEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskEvent.Unmarshal(m, b)
}
func (m *TaskEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskEvent.Marshal(b, m, deterministic)
}
func (m *TaskEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskEvent.Merge(m, src)
}
func (m *TaskEvent) XXX_Size() int {
	return xxx_messageInfo_TaskEvent.Size(m)
}
func (m *TaskEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TaskEvent proto.InternalMessageInfo

func (m *TaskEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TaskEvent) GetTask() string {
	if m != nil {
		return m.Task
	}
	return ""
}

func (m *TaskEvent) GetIteration() int32 {
	if m != nil {
		return m.Iteration
	}
	return 0
}

func (m *TaskEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskEvent) GetActionableErr() *ActionableErr {
	if m != nil {
		return m.ActionableErr
	}
	return nil
}

// `BuildSubtaskvent` describes the build status per artifact, and will be emitted by Skaffold anytime a build starts or finishes, successfully or not.
// If the build fails, an error will be attached to the event.
type BuildSubtaskEvent struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId               string         `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Artifact             string         `protobuf:"bytes,3,opt,name=artifact,proto3" json:"artifact,omitempty"`
	Status               string         `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	ActionableErr        *ActionableErr `protobuf:"bytes,5,opt,name=actionableErr,proto3" json:"actionableErr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BuildSubtaskEvent) Reset()         { *m = BuildSubtaskEvent{} }
func (m *BuildSubtaskEvent) String() string { return proto.CompactTextString(m) }
func (*BuildSubtaskEvent) ProtoMessage()    {}
func (*BuildSubtaskEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{20}
}

func (m *BuildSubtaskEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildSubtaskEvent.Unmarshal(m, b)
}
func (m *BuildSubtaskEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildSubtaskEvent.Marshal(b, m, deterministic)
}
func (m *BuildSubtaskEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildSubtaskEvent.Merge(m, src)
}
func (m *BuildSubtaskEvent) XXX_Size() int {
	return xxx_messageInfo_BuildSubtaskEvent.Size(m)
}
func (m *BuildSubtaskEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildSubtaskEvent.DiscardUnknown(m)
}

var xxx_messageInfo_BuildSubtaskEvent proto.InternalMessageInfo

func (m *BuildSubtaskEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BuildSubtaskEvent) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *BuildSubtaskEvent) GetArtifact() string {
	if m != nil {
		return m.Artifact
	}
	return ""
}

func (m *BuildSubtaskEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *BuildSubtaskEvent) GetActionableErr() *ActionableErr {
	if m != nil {
		return m.ActionableErr
	}
	return nil
}

// `TestSubtaskEvent` represents the status of a test, and is emitted by Skaffold
// anytime a test starts or completes, successfully or not.
type TestSubtaskEvent struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId               string         `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status               string         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ActionableErr        *ActionableErr `protobuf:"bytes,4,opt,name=actionableErr,proto3" json:"actionableErr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TestSubtaskEvent) Reset()         { *m = TestSubtaskEvent{} }
func (m *TestSubtaskEvent) String() string { return proto.CompactTextString(m) }
func (*TestSubtaskEvent) ProtoMessage()    {}
func (*TestSubtaskEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{21}
}

func (m *TestSubtaskEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestSubtaskEvent.Unmarshal(m, b)
}
func (m *TestSubtaskEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestSubtaskEvent.Marshal(b, m, deterministic)
}
func (m *TestSubtaskEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestSubtaskEvent.Merge(m, src)
}
func (m *TestSubtaskEvent) XXX_Size() int {
	return xxx_messageInfo_TestSubtaskEvent.Size(m)
}
func (m *TestSubtaskEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TestSubtaskEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TestSubtaskEvent proto.InternalMessageInfo

func (m *TestSubtaskEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TestSubtaskEvent) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *TestSubtaskEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TestSubtaskEvent) GetActionableErr() *ActionableErr {
	if m != nil {
		return m.ActionableErr
	}
	return nil
}

// `DeploySubtaskEvent` represents the status of a deployment, and is emitted by Skaffold
// anytime a deployment starts or completes, successfully or not.
type DeploySubtaskEvent struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId               string         `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status               string         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ActionableErr        *ActionableErr `protobuf:"bytes,4,opt,name=actionableErr,proto3" json:"actionableErr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeploySubtaskEvent) Reset()         { *m = DeploySubtaskEvent{} }
func (m *DeploySubtaskEvent) String() string { return proto.CompactTextString(m) }
func (*DeploySubtaskEvent) ProtoMessage()    {}
func (*DeploySubtaskEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{22}
}

func (m *DeploySubtaskEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeploySubtaskEvent.Unmarshal(m, b)
}
func (m *DeploySubtaskEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeploySubtaskEvent.Marshal(b, m, deterministic)
}
func (m *DeploySubtaskEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeploySubtaskEvent.Merge(m, src)
}
func (m *DeploySubtaskEvent) XXX_Size() int {
	return xxx_messageInfo_DeploySubtaskEvent.Size(m)
}
func (m *DeploySubtaskEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeploySubtaskEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeploySubtaskEvent proto.InternalMessageInfo

func (m *DeploySubtaskEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeploySubtaskEvent) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *DeploySubtaskEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DeploySubtaskEvent) GetActionableErr() *ActionableErr {
	if m != nil {
		return m.ActionableErr
	}
	return nil
}

// A Resource StatusCheck Event, indicates progress for each kubernetes deployment.
// For every resource, there will be exactly one event with `status` *Succeeded* or *Failed* event.
// There can be multiple events with `status` *Pending*.
// Skaffold polls for resource status every 0.5 second. If the resource status changes, an event with `status` “Pending”, “Complete” and “Failed”
// will be sent with the new status.
type StatusCheckSubtaskEvent struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId               string           `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Resource             string           `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Status               string           `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Message              string           `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	StatusCode           enums.StatusCode `protobuf:"varint,6,opt,name=statusCode,proto3,enum=proto.enums.StatusCode" json:"statusCode,omitempty"`
	ActionableErr        *ActionableErr   `protobuf:"bytes,7,opt,name=actionableErr,proto3" json:"actionableErr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *StatusCheckSubtaskEvent) Reset()         { *m = StatusCheckSubtaskEvent{} }
func (m *StatusCheckSubtaskEvent) String() string { return proto.CompactTextString(m) }
func (*StatusCheckSubtaskEvent) ProtoMessage()    {}
func (*StatusCheckSubtaskEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{23}
}

func (m *StatusCheckSubtaskEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusCheckSubtaskEvent.Unmarshal(m, b)
}
func (m *StatusCheckSubtaskEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusCheckSubtaskEvent.Marshal(b, m, deterministic)
}
func (m *StatusCheckSubtaskEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusCheckSubtaskEvent.Merge(m, src)
}
func (m *StatusCheckSubtaskEvent) XXX_Size() int {
	return xxx_messageInfo_StatusCheckSubtaskEvent.Size(m)
}
func (m *StatusCheckSubtaskEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusCheckSubtaskEvent.DiscardUnknown(m)
}

var xxx_messageInfo_StatusCheckSubtaskEvent proto.InternalMessageInfo

func (m *StatusCheckSubtaskEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StatusCheckSubtaskEvent) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *StatusCheckSubtaskEvent) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *StatusCheckSubtaskEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StatusCheckSubtaskEvent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *StatusCheckSubtaskEvent) GetStatusCode() enums.StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return enums.StatusCode_OK
}

func (m *StatusCheckSubtaskEvent) GetActionableErr() *ActionableErr {
	if m != nil {
		return m.ActionableErr
	}
	return nil
}

// PortForwardEvent Event describes each port forwarding event.
type PortForwardEvent struct {
	Id                   string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId               string       `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	LocalPort            int32        `protobuf:"varint,3,opt,name=localPort,proto3" json:"localPort,omitempty"`
	PodName              string       `protobuf:"bytes,4,opt,name=podName,proto3" json:"podName,omitempty"`
	ContainerName        string       `protobuf:"bytes,5,opt,name=containerName,proto3" json:"containerName,omitempty"`
	Namespace            string       `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PortName             string       `protobuf:"bytes,7,opt,name=portName,proto3" json:"portName,omitempty"`
	ResourceType         string       `protobuf:"bytes,8,opt,name=resourceType,proto3" json:"resourceType,omitempty"`
	ResourceName         string       `protobuf:"bytes,9,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	Address              string       `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`
	TargetPort           *IntOrString `protobuf:"bytes,11,opt,name=targetPort,proto3" json:"targetPort,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PortForwardEvent) Reset()         { *m = PortForwardEvent{} }
func (m *PortForwardEvent) String() string { return proto.CompactTextString(m) }
func (*PortForwardEvent) ProtoMessage()    {}
func (*PortForwardEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{24}
}

func (m *PortForwardEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortForwardEvent.Unmarshal(m, b)
}
func (m *PortForwardEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortForwardEvent.Marshal(b, m, deterministic)
}
func (m *PortForwardEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortForwardEvent.Merge(m, src)
}
func (m *PortForwardEvent) XXX_Size() int {
	return xxx_messageInfo_PortForwardEvent.Size(m)
}
func (m *PortForwardEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_PortForwardEvent.DiscardUnknown(m)
}

var xxx_messageInfo_PortForwardEvent proto.InternalMessageInfo

func (m *PortForwardEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PortForwardEvent) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *PortForwardEvent) GetLocalPort() int32 {
	if m != nil {
		return m.LocalPort
	}
	return 0
}

func (m *PortForwardEvent) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *PortForwardEvent) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

func (m *PortForwardEvent) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *PortForwardEvent) GetPortName() string {
	if m != nil {
		return m.PortName
	}
	return ""
}

func (m *PortForwardEvent) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *PortForwardEvent) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *PortForwardEvent) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PortForwardEvent) GetTargetPort() *IntOrString {
	if m != nil {
		return m.TargetPort
	}
	return nil
}

// FileSyncEvent describes the sync status.
type FileSyncEvent struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId               string         `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FileCount            int32          `protobuf:"varint,3,opt,name=fileCount,proto3" json:"fileCount,omitempty"`
	Image                string         `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Status               string         `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ActionableErr        *ActionableErr `protobuf:"bytes,6,opt,name=actionableErr,proto3" json:"actionableErr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FileSyncEvent) Reset()         { *m = FileSyncEvent{} }
func (m *FileSyncEvent) String() string { return proto.CompactTextString(m) }
func (*FileSyncEvent) ProtoMessage()    {}
func (*FileSyncEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{25}
}

func (m *FileSyncEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileSyncEvent.Unmarshal(m, b)
}
func (m *FileSyncEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileSyncEvent.Marshal(b, m, deterministic)
}
func (m *FileSyncEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileSyncEvent.Merge(m, src)
}
func (m *FileSyncEvent) XXX_Size() int {
	return xxx_messageInfo_FileSyncEvent.Size(m)
}
func (m *FileSyncEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_FileSyncEvent.DiscardUnknown(m)
}

var xxx_messageInfo_FileSyncEvent proto.InternalMessageInfo

func (m *FileSyncEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FileSyncEvent) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *FileSyncEvent) GetFileCount() int32 {
	if m != nil {
		return m.FileCount
	}
	return 0
}

func (m *FileSyncEvent) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *FileSyncEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *FileSyncEvent) GetActionableErr() *ActionableErr {
	if m != nil {
		return m.ActionableErr
	}
	return nil
}

// DebuggingContainerEvent is raised when a debugging container is started or terminated
type DebuggingContainerEvent struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId               string            `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status               string            `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	PodName              string            `protobuf:"bytes,4,opt,name=podName,proto3" json:"podName,omitempty"`
	ContainerName        string            `protobuf:"bytes,5,opt,name=containerName,proto3" json:"containerName,omitempty"`
	Namespace            string            `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Artifact             string            `protobuf:"bytes,7,opt,name=artifact,proto3" json:"artifact,omitempty"`
	Runtime              string            `protobuf:"bytes,8,opt,name=runtime,proto3" json:"runtime,omitempty"`
	WorkingDir           string            `protobuf:"bytes,9,opt,name=workingDir,proto3" json:"workingDir,omitempty"`
	DebugPorts           map[string]uint32 `protobuf:"bytes,10,rep,name=debugPorts,proto3" json:"debugPorts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DebuggingContainerEvent) Reset()         { *m = DebuggingContainerEvent{} }
func (m *DebuggingContainerEvent) String() string { return proto.CompactTextString(m) }
func (*DebuggingContainerEvent) ProtoMessage()    {}
func (*DebuggingContainerEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{26}
}

func (m *DebuggingContainerEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DebuggingContainerEvent.Unmarshal(m, b)
}
func (m *DebuggingContainerEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DebuggingContainerEvent.Marshal(b, m, deterministic)
}
func (m *DebuggingContainerEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DebuggingContainerEvent.Merge(m, src)
}
func (m *DebuggingContainerEvent) XXX_Size() int {
	return xxx_messageInfo_DebuggingContainerEvent.Size(m)
}
func (m *DebuggingContainerEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DebuggingContainerEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DebuggingContainerEvent proto.InternalMessageInfo

func (m *DebuggingContainerEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DebuggingContainerEvent) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *DebuggingContainerEvent) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *DebuggingContainerEvent) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *DebuggingContainerEvent) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

func (m *DebuggingContainerEvent) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *DebuggingContainerEvent) GetArtifact() string {
	if m != nil {
		return m.Artifact
	}
	return ""
}

func (m *DebuggingContainerEvent) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

func (m *DebuggingContainerEvent) GetWorkingDir() string {
	if m != nil {
		return m.WorkingDir
	}
	return ""
}

func (m *DebuggingContainerEvent) GetDebugPorts() map[string]uint32 {
	if m != nil {
		return m.DebugPorts
	}
	return nil
}

// LogEntry describes an event and a string description of the event.
type LogEntry struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Event                *Event               `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Entry                string               `protobuf:"bytes,3,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{27}
}

func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (m *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(m, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LogEntry) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *LogEntry) GetEntry() string {
	if m != nil {
		return m.Entry
	}
	return ""
}

type UserIntentRequest struct {
	Intent               *Intent  `protobuf:"bytes,1,opt,name=intent,proto3" json:"intent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserIntentRequest) Reset()         { *m = UserIntentRequest{} }
func (m *UserIntentRequest) String() string { return proto.CompactTextString(m) }
func (*UserIntentRequest) ProtoMessage()    {}
func (*UserIntentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{28}
}

func (m *UserIntentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIntentRequest.Unmarshal(m, b)
}
func (m *UserIntentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIntentRequest.Marshal(b, m, deterministic)
}
func (m *UserIntentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIntentRequest.Merge(m, src)
}
func (m *UserIntentRequest) XXX_Size() int {
	return xxx_messageInfo_UserIntentRequest.Size(m)
}
func (m *UserIntentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIntentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserIntentRequest proto.InternalMessageInfo

func (m *UserIntentRequest) GetIntent() *Intent {
	if m != nil {
		return m.Intent
	}
	return nil
}

type TriggerRequest struct {
	State                *TriggerState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TriggerRequest) Reset()         { *m = TriggerRequest{} }
func (m *TriggerRequest) String() string { return proto.CompactTextString(m) }
func (*TriggerRequest) ProtoMessage()    {}
func (*TriggerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{29}
}

func (m *TriggerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerRequest.Unmarshal(m, b)
}
func (m *TriggerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerRequest.Marshal(b, m, deterministic)
}
func (m *TriggerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerRequest.Merge(m, src)
}
func (m *TriggerRequest) XXX_Size() int {
	return xxx_messageInfo_TriggerRequest.Size(m)
}
func (m *TriggerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerRequest proto.InternalMessageInfo

func (m *TriggerRequest) GetState() *TriggerState {
	if m != nil {
		return m.State
	}
	return nil
}

// TriggerState represents trigger state for a given phase.
type TriggerState struct {
	// Types that are valid to be assigned to Val:
	//	*TriggerState_Enabled
	Val                  isTriggerState_Val `protobuf_oneof:"val"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TriggerState) Reset()         { *m = TriggerState{} }
func (m *TriggerState) String() string { return proto.CompactTextString(m) }
func (*TriggerState) ProtoMessage()    {}
func (*TriggerState) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{30}
}

func (m *TriggerState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerState.Unmarshal(m, b)
}
func (m *TriggerState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerState.Marshal(b, m, deterministic)
}
func (m *TriggerState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerState.Merge(m, src)
}
func (m *TriggerState) XXX_Size() int {
	return xxx_messageInfo_TriggerState.Size(m)
}
func (m *TriggerState) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerState.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerState proto.InternalMessageInfo

type isTriggerState_Val interface {
	isTriggerState_Val()
}

type TriggerState_Enabled struct {
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3,oneof"`
}

func (*TriggerState_Enabled) isTriggerState_Val() {}

func (m *TriggerState) GetVal() isTriggerState_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (m *TriggerState) GetEnabled() bool {
	if x, ok := m.GetVal().(*TriggerState_Enabled); ok {
		return x.Enabled
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TriggerState) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TriggerState_Enabled)(nil),
	}
}

// Intent represents user intents for a given phase.
type Intent struct {
	Build                bool     `protobuf:"varint,1,opt,name=build,proto3" json:"build,omitempty"`
	Sync                 bool     `protobuf:"varint,2,opt,name=sync,proto3" json:"sync,omitempty"`
	Deploy               bool     `protobuf:"varint,3,opt,name=deploy,proto3" json:"deploy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Intent) Reset()         { *m = Intent{} }
func (m *Intent) String() string { return proto.CompactTextString(m) }
func (*Intent) ProtoMessage()    {}
func (*Intent) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{31}
}

func (m *Intent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Intent.Unmarshal(m, b)
}
func (m *Intent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Intent.Marshal(b, m, deterministic)
}
func (m *Intent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Intent.Merge(m, src)
}
func (m *Intent) XXX_Size() int {
	return xxx_messageInfo_Intent.Size(m)
}
func (m *Intent) XXX_DiscardUnknown() {
	xxx_messageInfo_Intent.DiscardUnknown(m)
}

var xxx_messageInfo_Intent proto.InternalMessageInfo

func (m *Intent) GetBuild() bool {
	if m != nil {
		return m.Build
	}
	return false
}

func (m *Intent) GetSync() bool {
	if m != nil {
		return m.Sync
	}
	return false
}

func (m *Intent) GetDeploy() bool {
	if m != nil {
		return m.Deploy
	}
	return false
}

// Suggestion defines the action a user needs to recover from an error.
type Suggestion struct {
	SuggestionCode       enums.SuggestionCode `protobuf:"varint,1,opt,name=suggestionCode,proto3,enum=proto.enums.SuggestionCode" json:"suggestionCode,omitempty"`
	Action               string               `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Suggestion) Reset()         { *m = Suggestion{} }
func (m *Suggestion) String() string { return proto.CompactTextString(m) }
func (*Suggestion) ProtoMessage()    {}
func (*Suggestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{32}
}

func (m *Suggestion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Suggestion.Unmarshal(m, b)
}
func (m *Suggestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Suggestion.Marshal(b, m, deterministic)
}
func (m *Suggestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Suggestion.Merge(m, src)
}
func (m *Suggestion) XXX_Size() int {
	return xxx_messageInfo_Suggestion.Size(m)
}
func (m *Suggestion) XXX_DiscardUnknown() {
	xxx_messageInfo_Suggestion.DiscardUnknown(m)
}

var xxx_messageInfo_Suggestion proto.InternalMessageInfo

func (m *Suggestion) GetSuggestionCode() enums.SuggestionCode {
	if m != nil {
		return m.SuggestionCode
	}
	return enums.SuggestionCode_NIL
}

func (m *Suggestion) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

// IntOrString is a type that can hold an int32 or a string.
type IntOrString struct {
	Type                 int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	IntVal               int32    `protobuf:"varint,2,opt,name=intVal,proto3" json:"intVal,omitempty"`
	StrVal               string   `protobuf:"bytes,3,opt,name=strVal,proto3" json:"strVal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntOrString) Reset()         { *m = IntOrString{} }
func (m *IntOrString) String() string { return proto.CompactTextString(m) }
func (*IntOrString) ProtoMessage()    {}
func (*IntOrString) Descriptor() ([]byte, []int) {
	return fileDescriptor_39088757fd9c8e40, []int{33}
}

func (m *IntOrString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntOrString.Unmarshal(m, b)
}
func (m *IntOrString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntOrString.Marshal(b, m, deterministic)
}
func (m *IntOrString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntOrString.Merge(m, src)
}
func (m *IntOrString) XXX_Size() int {
	return xxx_messageInfo_IntOrString.Size(m)
}
func (m *IntOrString) XXX_DiscardUnknown() {
	xxx_messageInfo_IntOrString.DiscardUnknown(m)
}

var xxx_messageInfo_IntOrString proto.InternalMessageInfo

func (m *IntOrString) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *IntOrString) GetIntVal() int32 {
	if m != nil {
		return m.IntVal
	}
	return 0
}

func (m *IntOrString) GetStrVal() string {
	if m != nil {
		return m.StrVal
	}
	return ""
}

func init() {
	proto.RegisterType((*StateResponse)(nil), "proto.v2.StateResponse")
	proto.RegisterType((*Response)(nil), "proto.v2.Response")
	proto.RegisterType((*Request)(nil), "proto.v2.Request")
	proto.RegisterType((*State)(nil), "proto.v2.State")
	proto.RegisterMapType((map[int32]*PortForwardEvent)(nil), "proto.v2.State.ForwardedPortsEntry")
	proto.RegisterType((*Metadata)(nil), "proto.v2.Metadata")
	proto.RegisterMapType((map[string]string)(nil), "proto.v2.Metadata.AdditionalEntry")
	proto.RegisterType((*BuildMetadata)(nil), "proto.v2.BuildMetadata")
	proto.RegisterMapType((map[string]string)(nil), "proto.v2.BuildMetadata.AdditionalEntry")
	proto.RegisterType((*BuildMetadata_ImageBuilder)(nil), "proto.v2.BuildMetadata.ImageBuilder")
	proto.RegisterType((*TestMetadata)(nil), "proto.v2.TestMetadata")
	proto.RegisterType((*TestMetadata_Tester)(nil), "proto.v2.TestMetadata.Tester")
	proto.RegisterType((*DeployMetadata)(nil), "proto.v2.DeployMetadata")
	proto.RegisterType((*DeployMetadata_Deployer)(nil), "proto.v2.DeployMetadata.Deployer")
	proto.RegisterType((*BuildState)(nil), "proto.v2.BuildState")
	proto.RegisterMapType((map[string]string)(nil), "proto.v2.BuildState.ArtifactsEntry")
	proto.RegisterType((*TestState)(nil), "proto.v2.TestState")
	proto.RegisterType((*DeployState)(nil), "proto.v2.DeployState")
	proto.RegisterType((*StatusCheckState)(nil), "proto.v2.StatusCheckState")
	proto.RegisterMapType((map[string]string)(nil), "proto.v2.StatusCheckState.ResourcesEntry")
	proto.RegisterType((*FileSyncState)(nil), "proto.v2.FileSyncState")
	proto.RegisterType((*Event)(nil), "proto.v2.Event")
	proto.RegisterType((*TerminationEvent)(nil), "proto.v2.TerminationEvent")
	proto.RegisterType((*ActionableErr)(nil), "proto.v2.ActionableErr")
	proto.RegisterType((*MetaEvent)(nil), "proto.v2.MetaEvent")
	proto.RegisterType((*SkaffoldLogEvent)(nil), "proto.v2.SkaffoldLogEvent")
	proto.RegisterType((*ApplicationLogEvent)(nil), "proto.v2.ApplicationLogEvent")
	proto.RegisterType((*TaskEvent)(nil), "proto.v2.TaskEvent")
	proto.RegisterType((*BuildSubtaskEvent)(nil), "proto.v2.BuildSubtaskEvent")
	proto.RegisterType((*TestSubtaskEvent)(nil), "proto.v2.TestSubtaskEvent")
	proto.RegisterType((*DeploySubtaskEvent)(nil), "proto.v2.DeploySubtaskEvent")
	proto.RegisterType((*StatusCheckSubtaskEvent)(nil), "proto.v2.StatusCheckSubtaskEvent")
	proto.RegisterType((*PortForwardEvent)(nil), "proto.v2.PortForwardEvent")
	proto.RegisterType((*FileSyncEvent)(nil), "proto.v2.FileSyncEvent")
	proto.RegisterType((*DebuggingContainerEvent)(nil), "proto.v2.DebuggingContainerEvent")
	proto.RegisterMapType((map[string]uint32)(nil), "proto.v2.DebuggingContainerEvent.DebugPortsEntry")
	proto.RegisterType((*LogEntry)(nil), "proto.v2.LogEntry")
	proto.RegisterType((*UserIntentRequest)(nil), "proto.v2.UserIntentRequest")
	proto.RegisterType((*TriggerRequest)(nil), "proto.v2.TriggerRequest")
	proto.RegisterType((*TriggerState)(nil), "proto.v2.TriggerState")
	proto.RegisterType((*Intent)(nil), "proto.v2.Intent")
	proto.RegisterType((*Suggestion)(nil), "proto.v2.Suggestion")
	proto.RegisterType((*IntOrString)(nil), "proto.v2.IntOrString")
}

func init() { proto.RegisterFile("v2/skaffold.proto", fileDescriptor_39088757fd9c8e40) }

var fileDescriptor_39088757fd9c8e40 = []byte{
	// 2185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0x4f, 0x73, 0x1c, 0x47,
	0x15, 0xf7, 0xec, 0x6a, 0xff, 0xcc, 0x5b, 0x49, 0x96, 0x5a, 0xb6, 0xb4, 0xac, 0xe5, 0xc4, 0x1e,
	0x6c, 0x70, 0x12, 0x67, 0xd7, 0x92, 0x21, 0x4e, 0xb9, 0x10, 0x41, 0x52, 0x64, 0x4b, 0xb1, 0x89,
	0xe3, 0x91, 0x92, 0x03, 0x90, 0x72, 0x8d, 0x76, 0x5a, 0xe3, 0x29, 0xed, 0xce, 0x2c, 0xf3, 0x67,
	0xc3, 0xde, 0x80, 0x4b, 0x38, 0x43, 0x4e, 0x9c, 0x38, 0x70, 0xe1, 0xc4, 0x87, 0xe0, 0x23, 0x50,
	0xc5, 0x9d, 0x2a, 0x0e, 0x14, 0xc5, 0x27, 0xe0, 0x44, 0xf5, 0xeb, 0xee, 0x99, 0xee, 0x99, 0x5d,
	0xcb, 0xb2, 0xcb, 0x95, 0x8b, 0x34, 0xdd, 0xfd, 0x7b, 0xaf, 0xdf, 0x7b, 0xfd, 0xeb, 0xd7, 0xaf,
	0x7b, 0x61, 0x79, 0xbc, 0xd9, 0x8b, 0x4f, 0x9d, 0x93, 0x93, 0x70, 0xe0, 0x76, 0x47, 0x51, 0x98,
	0x84, 0xa4, 0x89, 0xff, 0xba, 0xe3, 0xcd, 0xce, 0xba, 0x17, 0x86, 0xde, 0x80, 0xf6, 0x9c, 0x91,
	0xdf, 0x73, 0x82, 0x20, 0x4c, 0x9c, 0xc4, 0x0f, 0x83, 0x98, 0xe3, 0x3a, 0x6f, 0x8b, 0x51, 0x6c,
	0x1d, 0xa7, 0x27, 0xbd, 0xc4, 0x1f, 0xd2, 0x38, 0x71, 0x86, 0x23, 0x01, 0xb8, 0x52, 0x04, 0xd0,
	0xe1, 0x28, 0x99, 0x88, 0xc1, 0x65, 0x1a, 0xa4, 0xc3, 0xb8, 0x87, 0x7f, 0x79, 0x97, 0xf5, 0x01,
	0x2c, 0x1c, 0x26, 0x4e, 0x42, 0x6d, 0x1a, 0x8f, 0xc2, 0x20, 0xa6, 0xe4, 0x26, 0xd4, 0x62, 0xd6,
	0xd1, 0x36, 0xae, 0x19, 0xb7, 0x5a, 0x9b, 0x17, 0xbb, 0xd2, 0xb2, 0x2e, 0xc7, 0xf1, 0x51, 0x6b,
	0x1d, 0x9a, 0x99, 0xc8, 0x12, 0x54, 0x87, 0xb1, 0x87, 0x02, 0xa6, 0xcd, 0x3e, 0xad, 0xab, 0xd0,
	0xb0, 0xe9, 0x2f, 0x53, 0x1a, 0x27, 0x84, 0xc0, 0x5c, 0xe0, 0x0c, 0xa9, 0x18, 0xc5, 0x6f, 0xeb,
	0x9f, 0x73, 0x50, 0x43, 0x6d, 0xe4, 0x07, 0x00, 0xc7, 0xa9, 0x3f, 0x70, 0x0f, 0x95, 0x29, 0x2f,
	0xe5, 0x53, 0xee, 0x64, 0x63, 0xb6, 0x82, 0x23, 0xf7, 0xa0, 0xe5, 0xd2, 0xd1, 0x20, 0x9c, 0x70,
	0xb1, 0x0a, 0x8a, 0x5d, 0xce, 0xc5, 0x3e, 0xce, 0x07, 0x6d, 0x15, 0x49, 0x1e, 0xc1, 0xe2, 0x49,
	0x18, 0x7d, 0xe5, 0x44, 0x2e, 0x75, 0x3f, 0x0b, 0xa3, 0x24, 0x6e, 0x57, 0xaf, 0x55, 0x6f, 0xb5,
	0x36, 0xbf, 0x5b, 0xf0, 0xb2, 0xfb, 0x40, 0x43, 0xed, 0x05, 0x49, 0x34, 0xb1, 0x0b, 0xa2, 0xe4,
	0x01, 0x2c, 0xb1, 0x58, 0xa4, 0xf1, 0xee, 0x73, 0xda, 0x3f, 0xe5, 0xa6, 0xcc, 0xa1, 0x29, 0x1d,
	0x5d, 0x9d, 0x8a, 0xb0, 0x4b, 0x32, 0x64, 0x0b, 0x16, 0x4e, 0xfc, 0x01, 0x3d, 0x9c, 0x04, 0x7d,
	0xae, 0xa4, 0x86, 0x4a, 0xd6, 0x72, 0x25, 0x0f, 0xd4, 0x61, 0x5b, 0x47, 0x93, 0x43, 0x58, 0x71,
	0xe9, 0x71, 0xea, 0x79, 0x7e, 0xe0, 0xed, 0x86, 0x41, 0xe2, 0xf8, 0x01, 0x8d, 0xe2, 0x76, 0x1d,
	0x1d, 0xbb, 0xae, 0x06, 0xa5, 0x08, 0xda, 0x1b, 0xd3, 0x20, 0xb1, 0xa7, 0x49, 0x93, 0x2e, 0x34,
	0x87, 0x34, 0x71, 0x5c, 0x27, 0x71, 0xda, 0x0d, 0x34, 0x87, 0xe4, 0x9a, 0x7e, 0x2a, 0x46, 0xec,
	0x0c, 0x43, 0x36, 0xc0, 0x4c, 0x68, 0x9c, 0x70, 0xfb, 0x9b, 0x28, 0xb0, 0x92, 0x0b, 0x1c, 0xc9,
	0x21, 0x3b, 0x47, 0x75, 0xbe, 0x84, 0x95, 0x29, 0x51, 0x66, 0x64, 0x3a, 0xa5, 0x13, 0xa4, 0x42,
	0xcd, 0x66, 0x9f, 0xe4, 0x0e, 0xd4, 0xc6, 0xce, 0x20, 0x95, 0xeb, 0xac, 0x04, 0x97, 0x89, 0x09,
	0x1d, 0xdc, 0x17, 0x0e, 0xbc, 0x5f, 0xf9, 0xd0, 0xb0, 0xfe, 0x58, 0x81, 0xa6, 0x34, 0x94, 0xbc,
	0x0f, 0x35, 0xa4, 0x8f, 0x60, 0xd8, 0x5a, 0x81, 0x61, 0x99, 0x43, 0x1c, 0x45, 0xee, 0x40, 0x9d,
	0xb3, 0x46, 0x4c, 0xd9, 0x2e, 0x52, 0x2b, 0x13, 0x10, 0x38, 0xf2, 0x2e, 0xcc, 0x31, 0xcf, 0xda,
	0x55, 0xc4, 0xaf, 0xea, 0xae, 0x67, 0x68, 0xc4, 0x90, 0x1d, 0x00, 0xc7, 0x75, 0x7d, 0xb6, 0xad,
	0x9d, 0x41, 0xbb, 0x8f, 0xeb, 0x64, 0x95, 0xa3, 0xdb, 0xdd, 0xce, 0x40, 0x9c, 0x7f, 0x8a, 0x54,
	0x67, 0x0b, 0x2e, 0x16, 0x86, 0xd5, 0xc0, 0x99, 0x3c, 0x70, 0x97, 0xd4, 0xc0, 0x99, 0x6a, 0x70,
	0xbe, 0xae, 0xc2, 0x82, 0xe6, 0x39, 0xb9, 0x0d, 0xcb, 0x41, 0x3a, 0x3c, 0xa6, 0xd1, 0x93, 0x93,
	0xed, 0x28, 0xf1, 0x4f, 0x9c, 0x7e, 0x12, 0x8b, 0x45, 0x28, 0x0f, 0x90, 0x9f, 0x40, 0x13, 0x23,
	0xc5, 0x88, 0x56, 0x41, 0x07, 0x6e, 0xcc, 0x08, 0x69, 0xf7, 0x60, 0xe8, 0x78, 0x74, 0x87, 0x83,
	0xed, 0x4c, 0x0a, 0x03, 0x36, 0x19, 0x51, 0x0c, 0xd8, 0x62, 0x16, 0x30, 0x9e, 0x99, 0x10, 0x7d,
	0x34, 0x19, 0x51, 0x1b, 0x31, 0xe4, 0xe1, 0x94, 0x80, 0x7d, 0x7f, 0xd6, 0x7c, 0x2f, 0x8a, 0x9a,
	0x0d, 0xf3, 0xaa, 0x39, 0xe4, 0xb6, 0x30, 0xc2, 0x40, 0x23, 0xda, 0x65, 0x23, 0x68, 0xa4, 0x98,
	0x71, 0x09, 0x6a, 0xfd, 0x30, 0x0d, 0x12, 0x0c, 0x67, 0xcd, 0xe6, 0x8d, 0xd7, 0x5d, 0x89, 0x6f,
	0x0c, 0x98, 0x57, 0x39, 0x42, 0xee, 0x41, 0x83, 0xb5, 0x59, 0x64, 0x0d, 0xf4, 0xf4, 0xea, 0x74,
	0x32, 0x75, 0x39, 0xca, 0x96, 0xe8, 0xce, 0x23, 0xa8, 0xf3, 0x4f, 0xf2, 0x9e, 0xe6, 0xd6, 0x9a,
	0xe6, 0x16, 0x87, 0x9c, 0xe5, 0x95, 0xf5, 0x0f, 0x03, 0x16, 0x75, 0xaa, 0x93, 0x8f, 0xc0, 0xe4,
	0x64, 0xcf, 0x4d, 0xbb, 0x3e, 0x6b, 0x5f, 0x88, 0x26, 0x8d, 0xec, 0x5c, 0x86, 0x6c, 0x42, 0xa3,
	0x3f, 0x48, 0xd9, 0xf4, 0x38, 0x57, 0x31, 0xe0, 0xbb, 0x7c, 0x0c, 0x4d, 0x93, 0xc0, 0xce, 0x13,
	0x68, 0x4a, 0x55, 0xe4, 0x7d, 0xcd, 0xad, 0xef, 0x68, 0xc2, 0x12, 0x74, 0xa6, 0x63, 0xff, 0x36,
	0x00, 0xf2, 0x53, 0x85, 0x6c, 0x83, 0xe9, 0x28, 0x74, 0x2f, 0x9c, 0x05, 0x39, 0xb0, 0x9b, 0x71,
	0x9f, 0xb3, 0x2a, 0x97, 0x22, 0xd7, 0xa0, 0xe5, 0xa4, 0x49, 0x78, 0x14, 0xf9, 0x9e, 0x27, 0x5c,
	0x6b, 0xda, 0x6a, 0x17, 0xb9, 0x07, 0x20, 0x92, 0x7e, 0xe8, 0x4a, 0xc6, 0xeb, 0xab, 0x72, 0x98,
	0x0d, 0xdb, 0x0a, 0xb4, 0xf3, 0x23, 0x58, 0xd4, 0xe7, 0x3d, 0x17, 0xb5, 0x7e, 0x01, 0x66, 0x96,
	0x78, 0xc9, 0x2a, 0xd4, 0xb9, 0x62, 0x21, 0x2b, 0x5a, 0x05, 0xdb, 0x2a, 0x2f, 0x6d, 0x9b, 0xf5,
	0x6b, 0x03, 0x5a, 0xca, 0x39, 0x3b, 0x73, 0x82, 0x37, 0x17, 0x1e, 0xeb, 0x3f, 0x06, 0x2c, 0x15,
	0xcf, 0xd7, 0x99, 0x76, 0x3c, 0x04, 0x33, 0xa2, 0x71, 0x98, 0x46, 0x7d, 0x2a, 0x73, 0xd6, 0x3b,
	0xb3, 0x8f, 0xe9, 0xae, 0x2d, 0xb1, 0x62, 0xbd, 0x33, 0xd9, 0xd7, 0x5a, 0x4d, 0x5d, 0xeb, 0xb9,
	0x56, 0xf3, 0x00, 0x16, 0xb4, 0x32, 0xe0, 0xd5, 0x03, 0x6e, 0xfd, 0xaf, 0x0e, 0x35, 0x3c, 0x2f,
	0xc9, 0x5d, 0x30, 0xd9, 0x11, 0x8e, 0x0d, 0x71, 0x36, 0xae, 0xe8, 0x27, 0x11, 0x0e, 0xed, 0x5f,
	0xb0, 0x73, 0x1c, 0xd9, 0x87, 0x25, 0x59, 0xbd, 0x3e, 0x0e, 0x3d, 0x2e, 0x5b, 0x3a, 0x9a, 0x0f,
	0x0b, 0x88, 0xfd, 0x0b, 0x76, 0x49, 0x8a, 0x3c, 0x85, 0x15, 0x67, 0x34, 0x1a, 0xf8, 0x7d, 0xac,
	0x71, 0x33, 0x65, 0xfc, 0x10, 0x55, 0xf2, 0xde, 0x76, 0x19, 0xb4, 0x7f, 0xc1, 0x9e, 0x26, 0xcb,
	0x3c, 0x4a, 0x9c, 0xf8, 0x94, 0x2b, 0x9a, 0x2b, 0x15, 0x22, 0x72, 0x88, 0x79, 0x94, 0xe1, 0xc8,
	0x23, 0x58, 0xe6, 0xd5, 0x65, 0x7a, 0x9c, 0x0b, 0xf3, 0x2a, 0xec, 0x4a, 0x31, 0x1b, 0x28, 0x90,
	0xfd, 0x0b, 0x76, 0x59, 0x8e, 0x7c, 0x0a, 0x44, 0x94, 0x9c, 0xaa, 0xb6, 0x3a, 0x6a, 0x5b, 0x2f,
	0xd5, 0xa8, 0xba, 0xba, 0x29, 0x92, 0xe4, 0x3e, 0x98, 0xa3, 0x30, 0x4a, 0xb8, 0x9a, 0xc6, 0x59,
	0x25, 0x10, 0x73, 0x2c, 0x83, 0x93, 0x2f, 0x61, 0x4d, 0x2d, 0x37, 0x55, 0x83, 0x78, 0x91, 0x76,
	0x7d, 0xfa, 0x16, 0xd0, 0xad, 0x9a, 0xa5, 0x83, 0x7c, 0x94, 0x57, 0xae, 0x5c, 0xa9, 0x39, 0xab,
	0x72, 0x95, 0xaa, 0x74, 0x3c, 0xb3, 0xcf, 0x9d, 0x5e, 0x96, 0xb6, 0xa1, 0x68, 0xdf, 0x8c, 0xfa,
	0x95, 0xd9, 0x37, 0x43, 0x07, 0x63, 0x6a, 0x42, 0xa3, 0xa1, 0x1f, 0x20, 0x47, 0xb8, 0xde, 0x56,
	0x31, 0x82, 0x47, 0x05, 0x04, 0x63, 0x6a, 0x51, 0x8a, 0x2d, 0x02, 0xab, 0xdd, 0xb8, 0x8a, 0xf9,
	0xb2, 0x8a, 0x38, 0x29, 0xc4, 0x2c, 0x87, 0xef, 0xcc, 0x03, 0x50, 0xf6, 0xf1, 0x8c, 0x1d, 0x4b,
	0xd6, 0xe7, 0xb0, 0x54, 0x9c, 0x71, 0xe6, 0x56, 0x7e, 0x07, 0xaa, 0x34, 0x8a, 0xc4, 0xe6, 0x52,
	0xa2, 0xba, 0xdd, 0xc7, 0x72, 0xe3, 0x78, 0x40, 0xf7, 0xa2, 0xc8, 0x66, 0x18, 0x56, 0x47, 0x2c,
	0x68, 0xdd, 0x64, 0x03, 0x1a, 0x34, 0x8a, 0x30, 0x49, 0x19, 0x2f, 0x4e, 0x52, 0x12, 0x47, 0xda,
	0xd0, 0x18, 0xd2, 0x38, 0x76, 0x3c, 0x99, 0x7f, 0x64, 0x93, 0x7c, 0x00, 0xad, 0x38, 0xf5, 0x3c,
	0x1a, 0xe3, 0x65, 0x54, 0xdc, 0x9a, 0x94, 0x8b, 0xda, 0x61, 0x36, 0x68, 0xab, 0x40, 0xeb, 0x29,
	0x98, 0x59, 0x16, 0x61, 0xc9, 0x8d, 0xb2, 0xbc, 0x27, 0xbc, 0xe4, 0x0d, 0xed, 0xaa, 0x51, 0x39,
	0xfb, 0xaa, 0x61, 0xfd, 0x85, 0x65, 0xfd, 0x62, 0x26, 0x59, 0x83, 0x06, 0x8b, 0xfe, 0x33, 0xdf,
	0x95, 0x21, 0x64, 0xcd, 0x03, 0x97, 0x5c, 0x05, 0x88, 0xf9, 0xca, 0xb0, 0x31, 0xee, 0x95, 0x29,
	0x7a, 0x0e, 0x5c, 0x16, 0xf9, 0x30, 0xf2, 0x3d, 0x3f, 0xc0, 0xa4, 0x63, 0xda, 0xa2, 0x45, 0xde,
	0x83, 0xda, 0x80, 0x8e, 0xe9, 0x00, 0x53, 0xc8, 0x62, 0x76, 0xb7, 0xe4, 0xa1, 0x7b, 0x1c, 0x7a,
	0x8f, 0xd9, 0xa0, 0xcd, 0x31, 0x6a, 0xd8, 0x6a, 0x5a, 0xd8, 0xac, 0x10, 0x56, 0xa6, 0xe4, 0x2e,
	0x72, 0x03, 0x16, 0xfa, 0x92, 0xa9, 0x9f, 0xe6, 0x97, 0x63, 0xbd, 0x93, 0xa9, 0x1d, 0x85, 0x2e,
	0x8e, 0x8b, 0xd5, 0x10, 0x4d, 0x75, 0xc2, 0xaa, 0x3e, 0xe1, 0x9f, 0x0d, 0x30, 0xb3, 0x24, 0x47,
	0x16, 0xa1, 0x92, 0x05, 0xa4, 0xe2, 0xbb, 0xec, 0x2e, 0xce, 0xfc, 0x16, 0xea, 0xf0, 0x9b, 0xac,
	0x83, 0xe9, 0x27, 0x34, 0x42, 0x03, 0x51, 0x5b, 0xcd, 0xce, 0x3b, 0x14, 0x66, 0xce, 0x69, 0xcc,
	0xdc, 0x82, 0x05, 0x47, 0x65, 0x5b, 0xf9, 0xce, 0xaa, 0x73, 0x54, 0x47, 0x5b, 0x7f, 0x35, 0x60,
	0xb9, 0x94, 0x4e, 0x4b, 0xe6, 0x2a, 0x8b, 0x5a, 0xd1, 0x16, 0xb5, 0x03, 0x4d, 0x59, 0x7f, 0x89,
	0x00, 0x64, 0xed, 0x37, 0x65, 0xf1, 0xef, 0x0d, 0xb6, 0x6f, 0xf5, 0x6d, 0xfe, 0xf2, 0x06, 0xe7,
	0x46, 0x55, 0x5f, 0x6c, 0xd4, 0xdc, 0xb9, 0x8c, 0xfa, 0xc6, 0x00, 0x52, 0x3e, 0x47, 0xbe, 0x75,
	0xb3, 0x7e, 0x57, 0x81, 0xb5, 0x19, 0xa7, 0xc9, 0xb9, 0xd6, 0x58, 0xd6, 0x5c, 0x72, 0x8d, 0x65,
	0x7b, 0xe6, 0x1a, 0xcf, 0xdc, 0x88, 0x85, 0xa2, 0xad, 0xfe, 0xd2, 0x45, 0x5b, 0x39, 0x14, 0x8d,
	0x73, 0x85, 0xe2, 0xbf, 0x15, 0x58, 0x2a, 0x1e, 0xd1, 0x2f, 0x1f, 0x83, 0x75, 0x30, 0x07, 0x61,
	0xdf, 0x19, 0x30, 0x0d, 0x72, 0x6f, 0x66, 0x1d, 0x6a, 0x7e, 0x98, 0xd3, 0xf3, 0x43, 0x29, 0xbf,
	0xd4, 0xa6, 0xe5, 0x97, 0x75, 0x30, 0x03, 0x67, 0x48, 0xe3, 0x91, 0xd3, 0xe7, 0x21, 0x31, 0xed,
	0xbc, 0x83, 0xc5, 0x9f, 0xd5, 0x11, 0x28, 0xde, 0xe0, 0xf1, 0x97, 0x6d, 0x62, 0xc1, 0xbc, 0x5c,
	0x0b, 0x76, 0xe1, 0xc2, 0x5a, 0xc2, 0xb4, 0xb5, 0x3e, 0x15, 0x83, 0x3a, 0x4c, 0x1d, 0x23, 0xf3,
	0x98, 0xe3, 0xba, 0x11, 0x8d, 0x63, 0x3c, 0xee, 0x4d, 0x5b, 0x36, 0xc9, 0x0f, 0x01, 0x12, 0x27,
	0xf2, 0x68, 0x82, 0xae, 0xb7, 0x8a, 0x0f, 0x7c, 0x07, 0x41, 0xf2, 0x24, 0x3a, 0x4c, 0x22, 0x3f,
	0xf0, 0x6c, 0x05, 0x68, 0xfd, 0xcd, 0xc8, 0xab, 0xe4, 0xf3, 0xc7, 0x9a, 0xd5, 0x26, 0xbb, 0x78,
	0x65, 0x14, 0xb1, 0xce, 0x3a, 0xd8, 0xd1, 0xe5, 0x0f, 0x19, 0xaf, 0x78, 0xa4, 0x79, 0x43, 0xe1,
	0x61, 0xed, 0xc5, 0xfb, 0xa7, 0x7e, 0x2e, 0xd2, 0xfc, 0xa9, 0x0a, 0x6b, 0x33, 0xaa, 0x9d, 0xd7,
	0xdf, 0xdb, 0x6f, 0x9c, 0x35, 0x59, 0x66, 0x6e, 0x14, 0x32, 0x73, 0x1b, 0x1a, 0x51, 0x1a, 0x24,
	0xfe, 0x50, 0x12, 0x46, 0x36, 0xc9, 0x5b, 0x00, 0x5f, 0x85, 0xd1, 0xa9, 0x1f, 0x78, 0x1f, 0xfb,
	0x91, 0x60, 0x8a, 0xd2, 0x43, 0x9e, 0x02, 0x60, 0x89, 0xc7, 0x9f, 0x6c, 0x01, 0x8b, 0x8f, 0x8d,
	0x33, 0x2b, 0x43, 0xde, 0xaf, 0x3c, 0xe0, 0x2a, 0x4a, 0x3a, 0x5b, 0x70, 0xb1, 0x30, 0x7c, 0xd6,
	0x6d, 0x6c, 0x41, 0xbd, 0x8d, 0xfd, 0xc6, 0x80, 0x26, 0x3b, 0xce, 0x51, 0xf0, 0x43, 0x30, 0xb3,
	0x67, 0x78, 0x71, 0x8b, 0xea, 0x74, 0xf9, 0x3b, 0x7c, 0x57, 0xbe, 0xc3, 0x77, 0x8f, 0x24, 0xc2,
	0xce, 0xc1, 0xe4, 0x26, 0xd4, 0xa8, 0x72, 0x7f, 0x52, 0x1e, 0xdb, 0xc5, 0x7b, 0x26, 0xd5, 0x0b,
	0xa7, 0xaa, 0x52, 0x38, 0x59, 0x5b, 0xb0, 0xfc, 0x79, 0x4c, 0xa3, 0x83, 0x20, 0x61, 0x50, 0xf1,
	0xdc, 0x7e, 0x0b, 0xea, 0x3e, 0x76, 0x08, 0x43, 0x96, 0xb4, 0x4d, 0xc3, 0x80, 0x62, 0xdc, 0xfa,
	0x31, 0x2c, 0x8a, 0x0b, 0xa1, 0x94, 0xbd, 0xad, 0x3f, 0xfd, 0xab, 0xaf, 0x98, 0x1c, 0xa8, 0xfd,
	0x02, 0xb0, 0x01, 0xf3, 0x6a, 0x37, 0xe9, 0x40, 0x83, 0x22, 0x85, 0x39, 0x3d, 0x9b, 0xfb, 0x17,
	0x6c, 0xd9, 0xb1, 0x53, 0x83, 0xea, 0xd8, 0x19, 0x58, 0x9f, 0x40, 0x9d, 0x1b, 0xc1, 0x3c, 0xca,
	0x1f, 0x64, 0x9b, 0xf2, 0xdd, 0x95, 0xc0, 0x5c, 0x3c, 0x09, 0xfa, 0xe2, 0xce, 0x8a, 0xdf, 0x8c,
	0xc7, 0xe2, 0x2d, 0xb6, 0x8a, 0xbd, 0xa2, 0x65, 0xf9, 0x00, 0x79, 0xd1, 0x49, 0x76, 0x61, 0x31,
	0x2f, 0x3b, 0x95, 0x9a, 0xf7, 0x8a, 0x9e, 0xe3, 0x35, 0x88, 0x5d, 0x10, 0x61, 0x53, 0xf1, 0x8d,
	0x28, 0xb7, 0x12, 0x6f, 0x59, 0x4f, 0xa1, 0xa5, 0x24, 0x1c, 0xac, 0xa2, 0xe4, 0x3b, 0x54, 0x4d,
	0x3c, 0x36, 0xad, 0x62, 0xd8, 0xbf, 0x70, 0x06, 0xe2, 0xb5, 0x49, 0xb4, 0xf8, 0x2e, 0x8c, 0x58,
	0x7f, 0xb6, 0x0b, 0x59, 0x6b, 0xf3, 0xeb, 0x1a, 0x2c, 0xcb, 0x22, 0xf6, 0x8b, 0xcd, 0x43, 0x1a,
	0x8d, 0xfd, 0x3e, 0x25, 0x0f, 0xa0, 0xf9, 0x90, 0xca, 0x07, 0x9b, 0x12, 0x83, 0xf6, 0x86, 0xa3,
	0x64, 0xd2, 0x29, 0xfe, 0x20, 0x63, 0x2d, 0xff, 0xf6, 0xef, 0xff, 0xfa, 0x43, 0xa5, 0x45, 0xcc,
	0xde, 0x78, 0xb3, 0x87, 0x4b, 0x43, 0x3e, 0x81, 0x3a, 0xf2, 0x27, 0x9e, 0xa9, 0x45, 0x29, 0xb1,
	0x25, 0x8d, 0x2d, 0x82, 0x8a, 0xe6, 0x09, 0x30, 0x45, 0x48, 0xbc, 0xf8, 0x8e, 0x41, 0x7e, 0x0e,
	0x8d, 0xbd, 0x5f, 0xd1, 0x7e, 0x9a, 0x50, 0xa2, 0xdc, 0x85, 0x4b, 0xc4, 0xeb, 0xcc, 0x98, 0xc9,
	0xba, 0x82, 0x5a, 0x2f, 0x5b, 0x2d, 0xd4, 0xca, 0x35, 0xdd, 0x17, 0x1c, 0x24, 0x2e, 0x98, 0xdb,
	0x69, 0x12, 0x62, 0x29, 0x48, 0xda, 0x25, 0xbe, 0x9d, 0xa5, 0xfb, 0x26, 0xea, 0x7e, 0xbb, 0xb3,
	0xca, 0x74, 0x23, 0x85, 0x7a, 0x4e, 0x9a, 0x84, 0xcf, 0xe4, 0x34, 0x9c, 0xa9, 0xe4, 0x18, 0x9a,
	0x6c, 0x16, 0x76, 0x28, 0xbc, 0xc2, 0x24, 0x37, 0x70, 0x92, 0xb7, 0x3a, 0x97, 0x31, 0xbe, 0x93,
	0xa0, 0x3f, 0x75, 0x8e, 0x13, 0x00, 0x36, 0x07, 0xaf, 0xc6, 0x5e, 0x61, 0x96, 0xef, 0xe1, 0x2c,
	0xd7, 0x3a, 0x6b, 0x6c, 0x16, 0x4e, 0xf1, 0xa9, 0xf3, 0x3c, 0x81, 0xfa, 0xbe, 0x13, 0xb8, 0x03,
	0x4a, 0x8a, 0xc9, 0x62, 0xa6, 0xea, 0x75, 0x54, 0xbd, 0x6a, 0x2d, 0xe7, 0xeb, 0xda, 0x7b, 0x8e,
	0x3a, 0xee, 0x1b, 0xef, 0xee, 0xdc, 0xfd, 0xd9, 0x86, 0xe7, 0x27, 0xcf, 0xd3, 0xe3, 0x6e, 0x3f,
	0x1c, 0xf6, 0x1e, 0xa2, 0x86, 0x2c, 0x8f, 0x1e, 0x85, 0xe1, 0x20, 0xce, 0x7e, 0xab, 0xe4, 0x3f,
	0x2a, 0xf6, 0xc6, 0x9b, 0x9f, 0x55, 0x8f, 0xeb, 0xf8, 0x7d, 0xf7, 0xff, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x95, 0x7a, 0xd1, 0x16, 0xcc, 0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SkaffoldV2ServiceClient is the client API for SkaffoldV2Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SkaffoldV2ServiceClient interface {
	// Returns the state of the current Skaffold execution
	GetState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*State, error)
	// Returns all the events of the current Skaffold execution from the start
	Events(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SkaffoldV2Service_EventsClient, error)
	// Allows for a single execution of some or all of the phases (build, sync, deploy) in case autoBuild, autoDeploy or autoSync are disabled.
	Execute(ctx context.Context, in *UserIntentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Allows for enabling or disabling automatic build trigger
	AutoBuild(ctx context.Context, in *TriggerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Allows for enabling or disabling automatic sync trigger
	AutoSync(ctx context.Context, in *TriggerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Allows for enabling or disabling automatic deploy trigger
	AutoDeploy(ctx context.Context, in *TriggerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// EXPERIMENTAL. It allows for custom events to be implemented in custom builders for example.
	Handle(ctx context.Context, in *Event, opts ...grpc.CallOption) (*empty.Empty, error)
}

type skaffoldV2ServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSkaffoldV2ServiceClient(cc grpc.ClientConnInterface) SkaffoldV2ServiceClient {
	return &skaffoldV2ServiceClient{cc}
}

func (c *skaffoldV2ServiceClient) GetState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*State, error) {
	out := new(State)
	err := c.cc.Invoke(ctx, "/proto.v2.SkaffoldV2Service/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skaffoldV2ServiceClient) Events(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (SkaffoldV2Service_EventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SkaffoldV2Service_serviceDesc.Streams[0], "/proto.v2.SkaffoldV2Service/Events", opts...)
	if err != nil {
		return nil, err
	}
	x := &skaffoldV2ServiceEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SkaffoldV2Service_EventsClient interface {
	Recv() (*LogEntry, error)
	grpc.ClientStream
}

type skaffoldV2ServiceEventsClient struct {
	grpc.ClientStream
}

func (x *skaffoldV2ServiceEventsClient) Recv() (*LogEntry, error) {
	m := new(LogEntry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *skaffoldV2ServiceClient) Execute(ctx context.Context, in *UserIntentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.v2.SkaffoldV2Service/Execute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skaffoldV2ServiceClient) AutoBuild(ctx context.Context, in *TriggerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.v2.SkaffoldV2Service/AutoBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skaffoldV2ServiceClient) AutoSync(ctx context.Context, in *TriggerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.v2.SkaffoldV2Service/AutoSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skaffoldV2ServiceClient) AutoDeploy(ctx context.Context, in *TriggerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.v2.SkaffoldV2Service/AutoDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *skaffoldV2ServiceClient) Handle(ctx context.Context, in *Event, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.v2.SkaffoldV2Service/Handle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SkaffoldV2ServiceServer is the server API for SkaffoldV2Service service.
type SkaffoldV2ServiceServer interface {
	// Returns the state of the current Skaffold execution
	GetState(context.Context, *empty.Empty) (*State, error)
	// Returns all the events of the current Skaffold execution from the start
	Events(*empty.Empty, SkaffoldV2Service_EventsServer) error
	// Allows for a single execution of some or all of the phases (build, sync, deploy) in case autoBuild, autoDeploy or autoSync are disabled.
	Execute(context.Context, *UserIntentRequest) (*empty.Empty, error)
	// Allows for enabling or disabling automatic build trigger
	AutoBuild(context.Context, *TriggerRequest) (*empty.Empty, error)
	// Allows for enabling or disabling automatic sync trigger
	AutoSync(context.Context, *TriggerRequest) (*empty.Empty, error)
	// Allows for enabling or disabling automatic deploy trigger
	AutoDeploy(context.Context, *TriggerRequest) (*empty.Empty, error)
	// EXPERIMENTAL. It allows for custom events to be implemented in custom builders for example.
	Handle(context.Context, *Event) (*empty.Empty, error)
}

// UnimplementedSkaffoldV2ServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSkaffoldV2ServiceServer struct {
}

func (*UnimplementedSkaffoldV2ServiceServer) GetState(ctx context.Context, req *empty.Empty) (*State, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetState not implemented")
}
func (*UnimplementedSkaffoldV2ServiceServer) Events(req *empty.Empty, srv SkaffoldV2Service_EventsServer) error {
	return status.Errorf(codes.Unimplemented, "method Events not implemented")
}
func (*UnimplementedSkaffoldV2ServiceServer) Execute(ctx context.Context, req *UserIntentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Execute not implemented")
}
func (*UnimplementedSkaffoldV2ServiceServer) AutoBuild(ctx context.Context, req *TriggerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutoBuild not implemented")
}
func (*UnimplementedSkaffoldV2ServiceServer) AutoSync(ctx context.Context, req *TriggerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutoSync not implemented")
}
func (*UnimplementedSkaffoldV2ServiceServer) AutoDeploy(ctx context.Context, req *TriggerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AutoDeploy not implemented")
}
func (*UnimplementedSkaffoldV2ServiceServer) Handle(ctx context.Context, req *Event) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handle not implemented")
}

func RegisterSkaffoldV2ServiceServer(s *grpc.Server, srv SkaffoldV2ServiceServer) {
	s.RegisterService(&_SkaffoldV2Service_serviceDesc, srv)
}

func _SkaffoldV2Service_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkaffoldV2ServiceServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v2.SkaffoldV2Service/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkaffoldV2ServiceServer).GetState(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkaffoldV2Service_Events_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SkaffoldV2ServiceServer).Events(m, &skaffoldV2ServiceEventsServer{stream})
}

type SkaffoldV2Service_EventsServer interface {
	Send(*LogEntry) error
	grpc.ServerStream
}

type skaffoldV2ServiceEventsServer struct {
	grpc.ServerStream
}

func (x *skaffoldV2ServiceEventsServer) Send(m *LogEntry) error {
	return x.ServerStream.SendMsg(m)
}

func _SkaffoldV2Service_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIntentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkaffoldV2ServiceServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v2.SkaffoldV2Service/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkaffoldV2ServiceServer).Execute(ctx, req.(*UserIntentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkaffoldV2Service_AutoBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkaffoldV2ServiceServer).AutoBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v2.SkaffoldV2Service/AutoBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkaffoldV2ServiceServer).AutoBuild(ctx, req.(*TriggerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkaffoldV2Service_AutoSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkaffoldV2ServiceServer).AutoSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v2.SkaffoldV2Service/AutoSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkaffoldV2ServiceServer).AutoSync(ctx, req.(*TriggerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkaffoldV2Service_AutoDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkaffoldV2ServiceServer).AutoDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v2.SkaffoldV2Service/AutoDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkaffoldV2ServiceServer).AutoDeploy(ctx, req.(*TriggerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SkaffoldV2Service_Handle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SkaffoldV2ServiceServer).Handle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.v2.SkaffoldV2Service/Handle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SkaffoldV2ServiceServer).Handle(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

var _SkaffoldV2Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.v2.SkaffoldV2Service",
	HandlerType: (*SkaffoldV2ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetState",
			Handler:    _SkaffoldV2Service_GetState_Handler,
		},
		{
			MethodName: "Execute",
			Handler:    _SkaffoldV2Service_Execute_Handler,
		},
		{
			MethodName: "AutoBuild",
			Handler:    _SkaffoldV2Service_AutoBuild_Handler,
		},
		{
			MethodName: "AutoSync",
			Handler:    _SkaffoldV2Service_AutoSync_Handler,
		},
		{
			MethodName: "AutoDeploy",
			Handler:    _SkaffoldV2Service_AutoDeploy_Handler,
		},
		{
			MethodName: "Handle",
			Handler:    _SkaffoldV2Service_Handle_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Events",
			Handler:       _SkaffoldV2Service_Events_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "v2/skaffold.proto",
}
